{"version":3,"file":"static/js/243.6bf663ec.chunk.js","mappings":"qUA2BMA,EAMA,CACJ,CAAEC,KAAM,QAASC,OAAOC,EAAAA,EAAAA,GAAE,aAAcC,aAAaD,EAAAA,EAAAA,GAAE,cACvD,CAAEF,KAAM,WAAYC,OAAOC,EAAAA,EAAAA,GAAE,YAAaC,aAAaD,EAAAA,EAAAA,GAAE,cAEtDE,EAAkB,SAAlBA,GAAkB,OAAlBA,EAAkB,UAAlBA,EAAkB,QAAlBA,CAAkB,EAAlBA,GAAkB,IAIjBC,GAAqBC,EAAAA,EAAAA,IAAoBF,GAwHzCG,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAiBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yGAMxBC,EAASJ,EAAAA,GAAAA,IAAUK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8FAQzB,UArI8E,SAAHG,GAAsB,IAAbC,EAAKC,OAAAC,OAAA,KAAAC,EAAAA,EAAAA,GAAAJ,GAAAA,IAEjFK,GAAiBC,EAAAA,EAAAA,MAAoBC,aAErCC,GAAOC,EAAAA,EAAAA,IAAQ,CAAC,GAEhBC,GAAqBC,EAAAA,EAAAA,UAAQ,WACjC,OAAY,OAALV,QAAK,IAALA,OAAK,EAALA,EAAOW,UAAWP,CAC3B,GAAG,CAACA,EAAqB,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOW,UAG3BC,GAAwCC,EAAAA,EAAAA,UAAwB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5DI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA0CL,EAAAA,EAAAA,YAA8CM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjFE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAkDT,EAAAA,EAAAA,YAA2BU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtEE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,IAE9CG,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,2CAA4CR,EAC1D,GAAG,CAACA,KASJM,EAAAA,EAAAA,YAAU,WACJF,IACFK,EAAAA,EAAAA,IACE,CAAEC,KAAM,CAAEC,QAAQC,EAAAA,EAAAA,IAASR,IAAsBS,UAAWhB,GAC5DiB,EAAAA,GAAAA,OAAAA,OACAA,EAAAA,GAGN,GAAG,CAACV,IAEJ,IAAMW,GAAiCzB,EAAAA,EAAAA,UACrC,eAAA0B,EAAA,OAAwB,OAAlB3B,QAAkB,IAAlBA,GAA8B,QAAZ2B,EAAlB3B,EAAoB4B,kBAAU,IAAAD,OAAZ,EAAlBA,EAAgCE,KAAI,SAAAC,GAAC,OAAIC,EAAAA,EAAAA,IAA4BD,EAAE,GAAC,GAC9E,CAAmB,OAAlB9B,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoB4B,aAGjBI,GAA2CC,EAAAA,EAAAA,cAAY,SAAAZ,GAC3D,IAAMa,EAAgB,OAAJb,QAAI,IAAJA,GAAAA,EAAMc,MAAQ,CAAEC,IAAKf,EAAKc,OAAU,KACjDD,IAELlB,EAAqBkB,IAErBd,EAAAA,EAAAA,IACE,CAAEC,KAAM,CAAEa,UAAWZ,QAAUE,UAAWhB,GAC1CiB,EAAAA,GAAAA,OAAAA,OACAA,EAAAA,IAEJ,GAAG,IAEGY,GAAuCJ,EAAAA,EAAAA,cAAY,SAAAZ,GACvD,IAAMiB,EAAY,OAAJjB,QAAI,IAAJA,GAAAA,EAAMc,MAAQ,CAAEC,IAAKf,EAAKc,OAAU,KAC7CG,GAEL1B,EAAiB0B,EACnB,GAAG,IAMH,OACEC,EAAAA,EAAAA,KAACxD,GAAIyD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACHC,YAAU,EACVC,MAAO,4BACPC,MAAO,SACHpD,GAAK,IACTqD,SAAU9C,EAAK+C,cAVH,SAACxB,GACfH,QAAQC,IAAI,4BAA6BE,EAC3C,IAQyCyB,UAErCC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,QAAS,MAAOC,SAAU,OAAQC,IAAK,EAAEL,SAAA,EAChDP,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAAC3E,OAAOC,EAAAA,EAAAA,GAAE,oBAAoBoE,UACvCP,EAAAA,EAAAA,KAACS,EAAAA,GAAO,CAACK,MAAO,CAAEC,OAAQ,KAAOJ,SAAU,SAASJ,UAClDP,EAAAA,EAAAA,KAACgB,EAAAA,GACC,CACAC,UAAW9B,EACX+B,WAAW,EACXC,WAAY1B,SAKlBO,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAAC3E,OAAOC,EAAAA,EAAAA,GAAE,gBAAgBoE,UACnCP,EAAAA,EAAAA,KAACS,EAAAA,GAAO,CAACK,MAAO,CAAEC,OAAQ,KAAOJ,SAAU,SAASJ,UAClDP,EAAAA,EAAAA,KAACgB,EAAAA,GAAS,CACRI,YAAaC,EAAAA,GACbJ,UAAWjD,EACXkD,WAAW,EACXC,WAAYrB,SAKlBE,EAAAA,EAAAA,KAACnD,EAAM,CAAA0D,SACJvE,EAAiCsD,KAAI,SAAAgC,GACpC,OACEtB,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAAkB3E,MAAW,OAAJoF,QAAI,IAAJA,OAAI,EAAJA,EAAMpF,MAAOqF,SAAc,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAAUC,SAAc,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAME,SAASjB,UAClGP,EAAAA,EAAAA,KAACyB,EAAAA,GAAS,CACRxF,KAAU,OAAJqF,QAAI,IAAJA,OAAI,EAAJA,EAAMrF,KACZyF,MAAO,QACPH,SAAc,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAChBC,SAAc,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAME,SAChBpF,YAAiB,OAAJkF,QAAI,IAAJA,OAAI,EAAJA,EAAMlF,eANF,OAAJkF,QAAI,IAAJA,OAAI,EAAJA,EAAMrF,KAU3B,OAGF+D,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAAC3E,OAAOC,EAAAA,EAAAA,GAAE,sBAAsBoE,UACzCP,EAAAA,EAAAA,KAAC2B,EAAAA,EAAY,CAACC,QAAStF,WAKjC,C","sources":["components/Forms/warehousing/FormCreateProductInventory.tsx"],"sourcesContent":["import ModalForm, { ModalFormProps } from '../../ModalForm';\nimport FlexBox from '../../atoms/FlexBox';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport TableList from '../../TableList/TableList';\nimport { pricesColumnsForProductReview } from '../../../data/priceManagement.data';\nimport { IProductInventoryFormData } from '../../../types/warehousing/warehouses.types';\nimport { PriceEntity } from '../../../types/price-management/price-management.types';\nimport { VariationEntity } from '../../../types/offers/variations.types';\nimport styled from 'styled-components';\nimport { useOffersSelector } from '../../../redux/selectors.store';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport { t } from '../../../lang';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport ButtonsGroup from '../../atoms/ButtonsGroup';\nimport { transformVariationTableData } from '../../../utils/tables';\nimport { createApiCall, PriceManagementApi } from '../../../api';\nimport { getIdRef } from '../../../utils/data-transform';\nimport { OnRowClickHandler } from '../../TableList/tableTypes.types';\nimport { useForm } from 'react-hook-form';\nimport { OnlyUUID } from '../../../redux/app-redux.types';\n\nexport interface FormCreateProductInventoryProps extends Omit<ModalFormProps<IProductInventoryFormData>, 'onSubmit'> {\n  product?: OfferEntity;\n}\n\nconst formCreateProductInventoryInputs: {\n  name: string;\n  placeholder?: string;\n  label?: string;\n  disabled?: boolean;\n  required?: boolean;\n}[] = [\n  { name: 'stock', label: t('Available'), placeholder: t('Available') },\n  { name: 'reserved', label: t('Reserved'), placeholder: t('Reserved') },\n];\nenum ReservationOptions {\n  Yes = 'Yes',\n  No = 'No',\n}\nconst reservationOptions = enumToFilterOptions(ReservationOptions);\nconst FormCreateProductInventory: React.FC<FormCreateProductInventoryProps> = ({ ...props }) => {\n  // const modalS = useModalProvider();\n  const currentProduct = useOffersSelector().currentOffer;\n\n  const form = useForm({});\n\n  const currentProductData = useMemo(() => {\n    return props?.product || currentProduct;\n  }, [currentProduct, props?.product]);\n\n  // const { products: productsS, warehouses: warehousesS } = useAppServiceProvider();\n  const [loadedPrices, setLoadedPrices] = useState<PriceEntity[]>([]);\n  const [selectedPrice, setSelectedPrice] = useState<PriceEntity | OnlyUUID | undefined>();\n  const [selectedVariation, setSelectedVariation] = useState<VariationEntity>();\n\n  useEffect(() => {\n    console.log('FormCreateProductInventory selectedPrice', selectedPrice);\n  }, [selectedPrice]);\n\n  // const templates = usePropertiesSelector();\n\n  // const variationsTableTitles = useMemo(() => {\n  //   const template = templates.find(t => t._id === currentProduct?.template?._id);\n  //   return createTableTitlesFromProperties(template);\n  // }, [currentProduct?.template?._id, templates]);\n\n  useEffect(() => {\n    if (selectedVariation) {\n      createApiCall(\n        { data: { origin: getIdRef(selectedVariation) }, onSuccess: setLoadedPrices },\n        PriceManagementApi.prices.getAll,\n        PriceManagementApi\n      );\n    }\n  }, [selectedVariation]);\n\n  const transformedVariationsTableData = useMemo(\n    () => currentProductData?.variations?.map(v => transformVariationTableData(v)),\n    [currentProductData?.variations]\n  );\n\n  const handleSelectVariation: OnRowClickHandler = useCallback(data => {\n    const variation = data?.rowId ? { _id: data.rowId } : null;\n    if (!variation) return;\n\n    setSelectedVariation(variation);\n\n    createApiCall(\n      { data: { variation: origin }, onSuccess: setLoadedPrices },\n      PriceManagementApi.prices.getAll,\n      PriceManagementApi\n    );\n  }, []);\n\n  const handleSelectPrice: OnRowClickHandler = useCallback(data => {\n    const price = data?.rowId ? { _id: data.rowId } : null;\n    if (!price) return;\n\n    setSelectedPrice(price);\n  }, []);\n\n  const onValid = (data: IProductInventoryFormData) => {\n    console.log('IProductInventoryFormData', data);\n  };\n\n  return (\n    <Form\n      fillHeight\n      title={'Add new product inventory'}\n      width={'960px'}\n      {...props}\n      onSubmit={form.handleSubmit(onValid)}\n    >\n      <FlexBox padding={'8px'} overflow={'auto'} gap={8}>\n        <InputLabel label={t('Select variation')}>\n          <FlexBox style={{ height: 300 }} overflow={'hidden'}>\n            <TableList\n              // tableTitles={variationsTableTitles}\n              tableData={transformedVariationsTableData}\n              hasSearch={false}\n              onRowClick={handleSelectVariation}\n            />\n          </FlexBox>\n        </InputLabel>\n\n        <InputLabel label={t('Select price')}>\n          <FlexBox style={{ height: 300 }} overflow={'hidden'}>\n            <TableList\n              tableTitles={pricesColumnsForProductReview}\n              tableData={loadedPrices}\n              hasSearch={false}\n              onRowClick={handleSelectPrice}\n            />\n          </FlexBox>\n        </InputLabel>\n\n        <Inputs>\n          {formCreateProductInventoryInputs.map(info => {\n            return (\n              <InputLabel key={info?.name} label={info?.label} disabled={info?.disabled} required={info?.required}>\n                <InputText\n                  name={info?.name}\n                  align={'right'}\n                  disabled={info?.disabled}\n                  required={info?.required}\n                  placeholder={info?.placeholder}\n                />\n              </InputLabel>\n            );\n          })}\n        </Inputs>\n\n        <InputLabel label={t('Reservation anable')}>\n          <ButtonsGroup options={reservationOptions} />\n        </InputLabel>\n      </FlexBox>\n    </Form>\n  );\n};\nconst Form = styled(ModalForm)`\n  @media screen and (min-width: 480px) {\n    width: fit-content;\n    max-width: 960px;\n  }\n`;\nconst Inputs = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 8px;\n\n  width: 100%;\n`;\n\nexport default FormCreateProductInventory;\n"],"names":["formCreateProductInventoryInputs","name","label","t","placeholder","ReservationOptions","reservationOptions","enumToFilterOptions","Form","styled","ModalForm","_templateObject","_taggedTemplateLiteral","Inputs","_templateObject2","_ref","props","Object","assign","_objectDestructuringEmpty","currentProduct","useOffersSelector","currentOffer","form","useForm","currentProductData","useMemo","product","_useState","useState","_useState2","_slicedToArray","loadedPrices","setLoadedPrices","_useState3","_useState4","selectedPrice","setSelectedPrice","_useState5","_useState6","selectedVariation","setSelectedVariation","useEffect","console","log","createApiCall","data","origin","getIdRef","onSuccess","PriceManagementApi","transformedVariationsTableData","_currentProductData$v","variations","map","v","transformVariationTableData","handleSelectVariation","useCallback","variation","rowId","_id","handleSelectPrice","price","_jsx","_objectSpread","fillHeight","title","width","onSubmit","handleSubmit","children","_jsxs","FlexBox","padding","overflow","gap","InputLabel","style","height","TableList","tableData","hasSearch","onRowClick","tableTitles","pricesColumnsForProductReview","info","disabled","required","InputText","align","ButtonsGroup","options"],"sourceRoot":""}