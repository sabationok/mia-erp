{"version":3,"file":"static/js/802.b2b3a10d.chunk.js","mappings":"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","sources":["components/Overlays/index.tsx","data/offers.data.ts","data/orders.data.ts","types/offers/offer-images.types.ts"],"sourcesContent":["import FlexBox, { FlexForm } from '../atoms/FlexBox';\nimport ButtonIcon from '../atoms/ButtonIcon';\nimport { Text } from '../atoms/Text';\nimport styled from 'styled-components';\nimport * as React from 'react';\n\nexport const DrawerHeader = ({\n  onBackPress,\n  onClosePress,\n  title,\n  okButton,\n  canSubmit,\n  isLoading,\n  renderTitle,\n}: {\n  canSubmit?: boolean;\n  onBackPress?: () => void;\n  onClosePress?: () => void;\n  title?: string;\n  okButton?: boolean;\n  children?: React.ReactNode;\n  isLoading?: boolean;\n  renderTitle?: React.ReactNode;\n}) => {\n  return (\n    <Header\n      alignItems={'center'}\n      fillWidth\n      fxDirection={'row'}\n      justifyContent={'space-between'}\n      height={'32px'}\n      gap={8}\n      padding={'2px 0'}\n      overflow={'hidden'}\n      sStyles={{\n        minHeight: '40px',\n      }}\n    >\n      {onBackPress && (\n        <ButtonIcon\n          variant={'textSmall'}\n          icon={'SmallArrowLeft'}\n          iconSize={'28px'}\n          padding={'0'}\n          gap={4}\n          style={{ minWidth: 'max-content', minHeight: '100%' }}\n          onClick={onBackPress}\n        ></ButtonIcon>\n      )}\n\n      <FlexBox justifyContent={'center'} overflow={'hidden'} padding={'0 8px'}>\n        {renderTitle || (\n          <Text\n            $weight={600}\n            $size={14}\n\n            // style={{ textTransform: 'uppercase', textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n          >\n            {title}\n          </Text>\n        )}\n      </FlexBox>\n\n      {okButton && (\n        <ButtonIcon\n          variant={'textSmall'}\n          gap={4}\n          type={'submit'}\n          padding={'0 6px'}\n          icon={'done'}\n          iconSize={'22px'}\n          style={{ minWidth: 'max-content', minHeight: '100%' }}\n          disabled={!canSubmit}\n          isLoading={isLoading}\n        >\n          {'Ok'}\n        </ButtonIcon>\n      )}\n\n      {onClosePress && (\n        <ButtonIcon\n          variant={'onlyIcon'}\n          icon={'close'}\n          iconSize={'22px'}\n          style={{ minWidth: 'max-content' }}\n          onClick={onClosePress}\n        />\n      )}\n    </Header>\n  );\n};\nconst Header = styled(FlexBox)`\n  height: 32px;\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport const OverlayFooter = ({\n  submitButtonText = 'Прийняти',\n  loading,\n  extraFooter,\n  canSubmit,\n  onCreatePress,\n  resetButtonShown,\n  onGoBackPress,\n}: {\n  canSubmit?: boolean;\n  resetButtonShown?: boolean;\n  extraFooter?: React.ReactNode;\n  loading?: boolean;\n  onCreatePress?: () => void;\n  submitButtonText?: string;\n  onGoBackPress?: () => void;\n}) => {\n  return (\n    <Footer fillWidth>\n      {extraFooter}\n\n      <FlexBox padding={'8px 8px 16px'} fxDirection={'row'} gap={8} alignItems={'center'}>\n        {onGoBackPress && (\n          <ButtonIcon\n            variant={'onlyIcon'}\n            icon={'SmallArrowLeft'}\n            size={'28px'}\n            iconSize={'90%'}\n            onClick={onGoBackPress}\n          />\n        )}\n\n        {resetButtonShown && (\n          <ButtonIcon variant={'onlyIcon'} icon={'clear'} size={'28px'} iconSize={'90%'} type={'reset'} />\n        )}\n\n        {onCreatePress && (\n          <ButtonIcon variant={'onlyIcon'} icon={'plus'} size={'32px'} iconSize={'90%'} onClick={onCreatePress} />\n        )}\n\n        <ButtonIcon\n          variant={'filledMiddle'}\n          flex={1}\n          type={'submit'}\n          // style={{ padding: '0 12px' }}\n          // textTransform={'uppercase'}\n          fontWeight={600}\n          endIcon={'done'}\n          // endIconSize={'24px'}\n          isLoading={loading}\n          disabled={!canSubmit}\n        >\n          {submitButtonText}\n        </ButtonIcon>\n      </FlexBox>\n    </Footer>\n  );\n};\n\nconst Footer = styled(FlexBox)``;\n\n// export const OverlayForm = ({\n//   children,\n//   ...props\n// }: { children?: React.ReactNode } & React.HTMLAttributes<HTMLFormElement>) => {\n//   const theme=useTheme()\n//   return <FlexForm flex={1} overflow={'hidden'} maxWidth={'480px'} width={'100%'} background={theme.modalBackgroundColor} {...props}>{children}</FlexForm>;\n// };\n\nexport const OverlayForm = styled(FlexForm)`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  overflow: hidden;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n","import { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { OfferEntity, OfferStatusEnum } from '../types/offers/offers.types';\nimport { getStatusesByEnum } from './statuses.data';\nimport { enumToFilterOptions } from '../utils';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { ImageSetSrcType } from '../types/offers/offer-images.types';\nimport { toPrice } from '../utils/numbers';\nimport { TableSearchParam, TableSortParam } from '../components/TableList/tableTypes.types';\nimport { IBase, Values } from '../types/utils.types';\n\nexport const offerStatusesData = getStatusesByEnum(OfferStatusEnum);\nexport const OfferStatusFilterOptions = enumToFilterOptions(OfferStatusEnum);\n\nexport const formAddImageSetTabs: FilterOption<ImageSetSrcType>[] = [\n  { label: 'Preview', value: ImageSetSrcType.img_preview, required: true },\n  { label: '1x', value: ImageSetSrcType.img_1x },\n  { label: '2x', value: ImageSetSrcType.img_2x },\n  { label: 'Webp', value: ImageSetSrcType.webp },\n];\nexport const offersTableColumns: CellTittleProps<OfferEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd?.label },\n    // bottom: { name: t('sku'), getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images?.[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'dataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    // top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), getData: d => d.approved as never },\n    top: { name: t('Visibility'), getData: d => (d.visible ? 'visible' : 'hidden') },\n    width: '120px',\n    action: 'status',\n  },\n\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => (d.price?.out ? toPrice(d.price?.out) : '--.--') },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => (d.price?.in ? toPrice(d.price?.in) : '--.--') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Variation label'), getData: d => d.variation?.label || '---' },\n    bottom: { name: t('SKU'), getData: d => d.variation?.sku || '---' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Warehouse'), getData: d => d.warehouse?.label },\n    bottom: { name: t('Code'), getData: d => d.warehouse?.code },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  // {\n  //   top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n  //   bottom: { name: t('Price IN'), getData: d => toPrice(d.price?.in) },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n\n  // {\n  //   top: {\n  //     name: t('category'),\n  //\n  //     getData: rd => rd.category?.label,\n  //   },\n  //   bottom: {\n  //     name: t('parentCategory'),\n  //\n  //     getData: rd => rd.category?.parent?.label,\n  //   },\n  //   width: '180px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Бренд', getData: rd => rd.brand?.label },\n    bottom: { name: 'Виробник', getData: rd => rd.brand?.manufacturer },\n    width: '180px',\n    action: 'doubleDataWithAvatar',\n  },\n  // {\n  //   top: { name: 'Опис', path: 'description' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Оновив', getData: rd => rd?.editor?.user?.email ?? '---' },\n    bottom: { name: 'Автор', getData: rd => rd?.author?.user?.email ?? '---' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  datesColumn(),\n];\n\nexport function deletedStatusColumn<Data extends IBase = any>(): CellTittleProps<Data> {\n  return {\n    top: { name: t('Deleted status'), align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  };\n}\nexport function datesColumn<Data extends IBase = any>(): CellTittleProps<Data> {\n  return {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  };\n}\n\nconst OfferSortPaths = [\n  'label',\n  'barCode',\n  'sku',\n  'approved',\n  'deletedAt',\n  'updatedAt',\n  'createdAt',\n  'brand.label',\n  'warehouse.label',\n  'warehouse.code',\n  'price.out',\n  'variations.label',\n  'variations.barCode',\n  'variations.sku',\n  'variations.price.out',\n  'variations.deletedAt',\n  'variations.updatedAt',\n  'variations.createdAt',\n] as const;\n\nexport type OfferSortParam = TableSortParam<Values<typeof OfferSortPaths> | string>;\nexport const offersSortParams: OfferSortParam[] = [\n  { dataPath: 'sku', label: 'SKU' },\n  { dataPath: 'label', label: t('Label') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'approved', label: t('Status') },\n  { dataPath: 'price.out', label: t('Price') },\n\n  { dataPath: 'createdAt', label: t('Created at') },\n  { dataPath: 'updatedAt', label: t('Updated at') },\n  { dataPath: 'deletedAt', label: t('Deleted at') },\n\n  { dataPath: 'brand.label', label: t('Brand label') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n];\n\nexport type OfferSearchParam = TableSearchParam<Values<typeof OfferSortPaths> | string>;\nexport const offersSearchParams: OfferSearchParam[] = [\n  { dataPath: 'sku', label: 'SKU' },\n  { dataPath: 'label', label: t('Label') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n  { dataPath: 'brand.label', label: t('Brand label') },\n];\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { OrderEntity, OrderStatusEnum } from '../types/orders/orders.types';\nimport { IOrderTempSlot, OrderSlotEntity } from '../types/orders/order-slot.types';\nimport { t } from '../lang';\nimport { TableSearchParam, TableSortParam } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { getStatusesByEnum } from './statuses.data';\nimport { getBasePriceColumns } from './priceManagement.data';\nimport { toPrice } from '../utils/numbers';\nimport { Values } from '../types/utils.types';\n\nconst createdDateColumn: CellTittleProps = {\n  top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n  bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n  width: '150px',\n  action: 'dateDbl',\n};\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\n// export type DataPath =\n//   | 'owner.label'\n//   | 'owner.name'\n//   | 'author.name'\n//   | 'author.email'\n//   | 'editor.name'\n//   | 'editor.email'\n//   | 'auditor.name'\n//   | 'auditor.email'\n//   | 'contractor.name'\n//   | 'contractor.type'\n//   | 'eventDate'\n//   | 'type'\n//   | 'status'\n//   | 'amount'\n//   | 'currency'\n//   | 'comment'\n//   | 'createdAt'\n//   | 'updatedAt'\n//   | 'mark.label'\n//   | 'invoice.label'\n//   | 'invoice.code'\n//   | 'invoice.number'\n//   | 'payment.label'\n//   | 'payment.code'\n//   | 'payment.number'\n//   | 'order.code'\n//   | 'total'\n//   | 'manager.name'\n//   | 'manager.code'\n//   | 'manager.email'\n//   | 'customer.name'\n//   | 'customer.phone'\n//   | 'receiver.name'\n//   | 'receiver.phone'\n//   | 'invoices'\n//   | 'payments'\n//   | 'transporters';\n\nexport const ordersTableColumns: CellTittleProps<OrderEntity>[] = [\n  {\n    top: {\n      name: `${t('Status')}`,\n      getData: rd => rd.status,\n    },\n    bottom: { name: t('Priority'), getData: _rd => t('undefined') },\n\n    // bottom: {\n    //   name: `${t('Status')}/${t('External')}`,\n    //   getData: rd => rd.status?.external,\n    // },\n    width: '150px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('Total amount'),\n      align: 'end',\n      getData: rd => toPrice(rd.summary?.netto ?? 0),\n    },\n    bottom: { name: t('Slots count'), align: 'end', getData: rd => rd.slots?.length || rd.summary?.slotsCount },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Reference / Internal'), getData: rd => rd?.reference?.internal },\n    bottom: { name: t('Reference / External'), getData: rd => rd?.reference?.external },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Group'), getData: rd => rd?.group?.reference?.internal },\n    bottom: { name: t('Strategy'), getData: rd => rd?.group?.strategy },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Customer'),\n      getData: rd =>\n        (rd.customer?.name && rd.customer?.name?.first + ' ' + rd.customer?.name?.second) ||\n        (rd.customer?.label && rd.customer?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Receiver'),\n      getData: rd =>\n        (rd.receiver?.name && rd.receiver?.name?.first + ' ' + rd.receiver?.name?.second) ||\n        (rd.receiver?.label && rd.receiver?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Deliveries') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  createdDateColumn,\n];\n\nconst extraKeys: ('cashback' | 'bonus' | 'discount')[] = ['cashback', 'bonus', 'discount'];\nfunction getTempOrderSlotColumns(): CellTittleProps<OrderSlotEntity>[] {\n  return extraKeys.map(key => {\n    return {\n      top: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.amount) },\n      bottom: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.percentage) },\n      action: 'valueByPath',\n      width: '90px',\n    };\n  });\n}\n\nexport const orderSlotsTableColumns: CellTittleProps<OrderSlotEntity>[] = [\n  {\n    top: { name: t('Offer label'), getData: rd => rd.offer?.label },\n    bottom: { name: t('Variation label'), getData: rd => rd.variation?.label },\n    action: 'valueByPath',\n    width: '210px',\n  },\n  {\n    top: { name: t('Total amount'), getData: rd => rd.netto },\n    bottom: { name: t('Total q-ty'), getData: rd => rd.quantity },\n    action: 'valueByPath',\n    width: '125px',\n  },\n  ...getBasePriceColumns(),\n  ...getTempOrderSlotColumns(),\n  {\n    top: { name: t('Offer sku'), getData: rd => rd.offer?.sku },\n    bottom: { name: t('Variation sku'), getData: rd => rd.variation?.sku },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Offer bar-code'), getData: rd => rd.offer?.barCode },\n    bottom: { name: t('Variation bar-code'), getData: rd => rd.variation?.barCode },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  createdDateColumn,\n];\n\nexport const tempOrderSlotTableColumns: CellTittleProps<IOrderTempSlot>[] =\n  orderSlotsTableColumns as CellTittleProps<IOrderTempSlot>[];\n\nconst OrdersAllowedPaths = [\n  'manager.email',\n  'manager.code',\n\n  'managers.email',\n  'managers.code',\n\n  'customer.email',\n  'customer.phone',\n  'customer.name.first',\n  'customer.name.second',\n  'customer.reference',\n\n  'receiver.email',\n  'receiver.phone',\n  'receiver.name.first',\n  'receiver.name.second',\n  'receiver.reference',\n\n  'barCode',\n  'reference.internal',\n  'reference.external',\n\n  'group.reference.internal',\n  'group.reference.external',\n\n  'status',\n  'deletedAt',\n  'updatedAt',\n  'createdAt',\n\n  'warehouse.label',\n  'warehouse.code',\n\n  // 'variations.label',\n  // 'variations.barCode',\n  // 'variations.sku',\n  // 'variations.price.out',\n  // 'variations.deletedAt',\n  // 'variations.updatedAt',\n  // 'variations.createdAt',\n] as const;\n\nexport type SaleOrdersSortParam = TableSortParam<Values<typeof OrdersAllowedPaths>>;\nexport const ordersSortParams: SaleOrdersSortParam[] = [\n  { dataPath: 'reference.internal', label: t('Reference / Internal') },\n  { dataPath: 'reference.external', label: t('Reference / External') },\n\n  { dataPath: 'group.reference.internal', label: t('Reference / Internal') + ` / ${t('Group').toLowerCase()}` },\n  { dataPath: 'group.reference.external', label: t('Reference / External') + ` / ${t('Group').toLowerCase()}` },\n\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'status', label: t('Status') },\n\n  { dataPath: 'manager.email', label: t('Manager email') },\n  { dataPath: 'manager.code', label: t('Manager code') },\n  { dataPath: 'managers.email', label: t('Any managers email') },\n  { dataPath: 'managers.code', label: t('Any managers code') },\n\n  { dataPath: 'customer.email', label: t('Customer email') },\n  { dataPath: 'customer.phone', label: t('Customer phone') },\n  { dataPath: 'customer.name.first', label: t('Customer first name') },\n  { dataPath: 'customer.name.second', label: t('Customer second name') },\n  { dataPath: 'customer.reference', label: t('Customer reference') },\n\n  { dataPath: 'receiver.email', label: t('Customer email') },\n  { dataPath: 'receiver.phone', label: t('Customer phone') },\n  { dataPath: 'receiver.name.first', label: t('Customer first name') },\n  { dataPath: 'receiver.name.second', label: t('Customer second name') },\n  { dataPath: 'receiver.reference', label: t('Customer reference') },\n\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n\n  { dataPath: 'createdAt', label: t('Created at') },\n  { dataPath: 'updatedAt', label: t('Updated at') },\n  { dataPath: 'deletedAt', label: t('Deleted at') },\n];\n\nexport type SaleOrdersSearchParam = TableSearchParam<Values<typeof OrdersAllowedPaths>>;\nexport const ordersSearchParams: SaleOrdersSearchParam[] = [\n  { dataPath: 'reference.internal', label: t('Reference / Internal') },\n  { dataPath: 'reference.external', label: t('Reference / External') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n  { dataPath: 'manager.email', label: t('Manager email') },\n  { dataPath: 'manager.code', label: t('Manager code') },\n  { dataPath: 'managers.email', label: t('Any managers email') },\n  { dataPath: 'managers.code', label: t('Any managers code') },\n];\n","import { IBase } from '../global.types';\n\nexport enum ImageSetSrcType {\n  img_preview = 'img_preview',\n  img_1x = 'img_1x',\n  img_2x = 'img_2x',\n  webp = 'webp',\n}\n\nexport interface OfferImageSlotEntity extends Partial<IBase> {\n  img_preview?: string;\n  img_1x?: string;\n  img_2x?: string;\n  webp?: string;\n  order: number;\n\n  mimeType?: string;\n}\n"],"names":["DrawerHeader","_ref","onBackPress","onClosePress","title","okButton","canSubmit","isLoading","renderTitle","_jsxs","Header","alignItems","fillWidth","fxDirection","justifyContent","height","gap","padding","overflow","sStyles","minHeight","children","_jsx","ButtonIcon","variant","icon","iconSize","style","minWidth","onClick","FlexBox","Text","$weight","$size","type","disabled","styled","_templateObject","_taggedTemplateLiteral","p","theme","modalBorderColor","OverlayFooter","_ref2","_ref2$submitButtonTex","submitButtonText","loading","extraFooter","onCreatePress","resetButtonShown","onGoBackPress","Footer","size","flex","fontWeight","endIcon","_templateObject2","OverlayForm","FlexForm","_templateObject3","modalBackgroundColor","OfferStatusFilterOptions","getStatusesByEnum","OfferStatusEnum","enumToFilterOptions","formAddImageSetTabs","label","value","ImageSetSrcType","required","offersTableColumns","top","name","t","getData","rd","getImgPreview","pr","_pr$images","_pr$images$","images","img_preview","undefined","width","action","sku","bottom","barCode","path","d","approved","visible","align","_d$price","_d$price2","price","out","toPrice","_d$price3","_d$price4","in","_d$variation","variation","_d$variation2","_d$warehouse","warehouse","_d$warehouse2","code","_rd$brand","brand","_rd$brand2","manufacturer","_rd$editor$user$email","_rd$editor","_rd$editor$user","editor","user","email","_rd$author$user$email","_rd$author","_rd$author$user","author","offersSortParams","dataPath","offersSearchParams","createdDateColumn","ordersTableColumns","OrderStatusEnum","concat","status","_rd","_rd$summary$netto","_rd$summary","summary","netto","_rd$slots","_rd$summary2","slots","length","slotsCount","_rd$reference","reference","internal","_rd$reference2","external","_rd$group","_rd$group$reference","group","_rd$group2","strategy","_rd$customer","_rd$customer2","_rd$customer2$name","_rd$customer3","_rd$customer3$name","_rd$customer4","_rd$customer5","customer","first","second","base","_rd$receiver","_rd$receiver2","_rd$receiver2$name","_rd$receiver3","_rd$receiver3$name","_rd$receiver4","_rd$receiver5","receiver","extraKeys","orderSlotsTableColumns","_rd$offer","offer","_rd$variation","quantity","_toConsumableArray","getBasePriceColumns","map","key","_rd$key","amount","_rd$key2","percentage","_rd$offer2","_rd$variation2","_rd$offer3","_rd$variation3","tempOrderSlotTableColumns","ordersSortParams","toLowerCase","ordersSearchParams"],"sourceRoot":""}