{"version":3,"file":"static/js/878.2567de51.chunk.js","mappings":"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","sources":["components/Forms/finances/FormCreateBankAccount.tsx","data/offers.data.ts","data/orders.data.ts","types/offers/offer-images.types.ts"],"sourcesContent":["import * as yup from 'yup';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../../atoms/FormAfterSubmitOptions';\nimport { useAppForm } from '../../../hooks';\nimport { BankAccountFormData } from '../../../types/finances/bank-accounts.types';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport { toReqData } from '../../../utils';\nimport { t } from '../../../i18e';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { Text } from '../../atoms/Text';\nimport { ToastService } from '../../../services';\nimport ModalBase, { ModalBaseProps } from '../../atoms/Modal';\nimport { AccordionForm, AccordionFormBaseProps } from '../../atoms/FormArea/AccordionForm';\nimport { useAppDispatch } from '../../../redux/store.store';\nimport {\n  createBankAccountThunk,\n  updateBankAccountThunk,\n} from '../../../redux/finances/bank-accounts/bank-accounts.thunks';\nimport { BankAccountTypeFilterOptions } from '../../../data';\nimport { omit, pick } from 'lodash';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport TagButtonsFilter from '../../atoms/TagButtonsFilter';\nimport ButtonSwitch from '../../atoms/ButtonSwitch';\n\nexport interface FormCreateBankAccountProps extends ModalBaseProps {\n  onSubmit?: AppSubmitHandler<BankAccountFormData>;\n  defaultState?: BankAccountFormData;\n}\n\nconst validation = yup.object().shape({\n  label: yup.string().required(),\n  description: yup.string().max(250).optional(),\n});\n\ntype FormAreaName = keyof BankAccountFormData | 'main';\nconst FormCreateBankAccount: React.FC<FormCreateBankAccountProps> = ({ defaultState, onSubmit, ...props }) => {\n  const submitOptions = useAfterSubmitOptions();\n  const loaders = useLoaders<FormAreaName>();\n  const dispatch = useAppDispatch();\n  const {\n    formState: { errors },\n    register,\n    handleSubmit,\n    getFieldState,\n    formValues,\n    setValue,\n  } = useAppForm<BankAccountFormData>({\n    defaultValues: { ...defaultState },\n    resolver: yupResolver(validation),\n    reValidateMode: 'onSubmit',\n  });\n\n  const getOnSubmit = (name: FormAreaName) => {\n    return ({ withMethod, ...fData }: BankAccountFormData) => {\n      const submitData = name === 'main' ? omit(fData, 'bank') : pick(fData, ['_id', 'bank']);\n\n      console.log(`[FormCreateBankAccount] [${name}]`, { defaultState, submitData, fData });\n\n      if (!fData._id) {\n        dispatch(\n          createBankAccountThunk({\n            data: { data: { data: toReqData(submitData), params: { withMethod } } },\n            onLoading: loaders.onLoading(name),\n            onSuccess: ({ data }) => {\n              ToastService.success(`${data.label} created`);\n              setValue('_id', data._id);\n            },\n          })\n        );\n      } else {\n        dispatch(\n          updateBankAccountThunk({\n            data: { data: { data: toReqData(submitData) } },\n            onLoading: loaders.onLoading(name),\n            onSuccess: ({ data }) => {\n              ToastService.success(`${data.label} updated`);\n            },\n          })\n        );\n      }\n    };\n  };\n\n  const registerFormArea = (name: FormAreaName): AccordionFormBaseProps => {\n    return {\n      canSubmit: name === 'bank' ? getFieldState('bank').isDirty : true,\n      disabled: name === 'bank' ? !formValues?._id : false,\n      isLoading: name === 'bank' ? loaders.isLoading.bank : loaders.isLoading.main,\n      onSubmit: handleSubmit(getOnSubmit(name)),\n    };\n  };\n\n  return (\n    <ModalBase {...props}>\n      <AccordionForm label={'Main info'} {...registerFormArea('main')}>\n        <InputLabel label={t('label')} error={errors.label} required>\n          <InputText placeholder={t('insertLabel')} {...register('label')} required autoFocus />\n        </InputLabel>\n\n        <InputLabel label={t('IBAN')} error={errors.iban} required>\n          <InputText placeholder={t('IBAN')} {...register('iban')} required />\n        </InputLabel>\n\n        <InputLabel label={t('Account holder')} error={errors.holder}>\n          <InputText placeholder={t('Holder')} {...register('holder')} />\n        </InputLabel>\n\n        <InputLabel label={t('Tax ID')} error={errors.taxCode}>\n          <InputText placeholder={t('Tax ID')} {...register('taxCode')} />\n        </InputLabel>\n\n        <InputLabel label={t('Select type')} error={errors.type}>\n          <TagButtonsFilter\n            options={BankAccountTypeFilterOptions}\n            value={formValues.type ?? undefined}\n            onSelect={option => {\n              option.value && setValue('type', option.value, { shouldTouch: true, shouldDirty: true });\n            }}\n          />\n        </InputLabel>\n\n        {!formValues._id && (\n          <InputLabel label={t('Create method')}>\n            <ButtonSwitch\n              value={formValues.withMethod}\n              onChange={v => {\n                setValue('withMethod', v);\n              }}\n            />\n          </InputLabel>\n        )}\n      </AccordionForm>\n\n      <AccordionForm label={'Bank details'} {...registerFormArea('bank')}>\n        <Text $size={12} $weight={600} $padding={'8px'}>\n          {t('Bank details')}\n        </Text>\n\n        <InputLabel label={t('label')} error={errors.bank?.label}>\n          <InputText placeholder={t('insertLabel')} {...register('bank.label')} />\n        </InputLabel>\n\n        <InputLabel label={t('Country')} error={errors.bank?.label}>\n          <InputText placeholder={t('Country')} {...register('bank.country')} />\n        </InputLabel>\n\n        <InputLabel label={t('Tax ID')} error={errors.bank?.taxCode}>\n          <InputText placeholder={t('Tax ID')} {...register('bank.taxCode')} />\n        </InputLabel>\n      </AccordionForm>\n\n      <FormAfterSubmitOptions {...submitOptions} />\n    </ModalBase>\n  );\n};\n\nexport default FormCreateBankAccount;\n","import { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../i18e';\nimport { OfferEntity, OfferStatusEnum } from '../types/offers/offers.types';\nimport { getStatusesByEnum } from './statuses.data';\nimport { enumToFilterOptions } from '../utils';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { ImageSetSrcType } from '../types/offers/offer-images.types';\nimport { toPrice } from '../utils/numbers';\nimport { TableSearchParam, TableSortParam } from '../components/TableList/tableTypes.types';\nimport { IBase, Values } from '../types/utils.types';\n\nexport const offerStatusesData = getStatusesByEnum(OfferStatusEnum);\nexport const OfferStatusFilterOptions = enumToFilterOptions(OfferStatusEnum);\n\nexport const formAddImageSetTabs: FilterOption<ImageSetSrcType>[] = [\n  { label: 'Preview', value: ImageSetSrcType.img_preview, required: true },\n  { label: '1x', value: ImageSetSrcType.img_1x },\n  { label: '2x', value: ImageSetSrcType.img_2x },\n  { label: 'Webp', value: ImageSetSrcType.webp },\n];\nexport const offersTableColumns: CellTittleProps<OfferEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd?.label },\n    // bottom: { name: t('sku'), getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images?.[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'dataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    // top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), getData: d => d.approved as never },\n    top: { name: t('Visibility'), getData: d => (d.visible ? 'visible' : 'hidden') },\n    width: '120px',\n    action: 'status',\n  },\n\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => (d.price?.out ? toPrice(d.price?.out) : '--.--') },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => (d.price?.in ? toPrice(d.price?.in) : '--.--') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Variation label'), getData: d => d.variation?.label || '---' },\n    bottom: { name: t('SKU'), getData: d => d.variation?.sku || '---' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Warehouse'), getData: d => d.warehouse?.label },\n    bottom: { name: t('Code'), getData: d => d.warehouse?.code },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  // {\n  //   top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n  //   bottom: { name: t('Price IN'), getData: d => toPrice(d.price?.in) },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n\n  // {\n  //   top: {\n  //     name: t('category'),\n  //\n  //     getData: rd => rd.category?.label,\n  //   },\n  //   bottom: {\n  //     name: t('parentCategory'),\n  //\n  //     getData: rd => rd.category?.parent?.label,\n  //   },\n  //   width: '180px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Бренд', getData: rd => rd.brand?.label },\n    bottom: { name: 'Виробник', getData: rd => rd.brand?.manufacturer },\n    width: '180px',\n    action: 'doubleDataWithAvatar',\n  },\n  // {\n  //   top: { name: 'Опис', path: 'description' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Оновив', getData: rd => rd?.editor?.user?.email ?? '---' },\n    bottom: { name: 'Автор', getData: rd => rd?.author?.user?.email ?? '---' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  datesColumn(),\n];\n\nexport function deletedStatusColumn<Data extends IBase = any>(): CellTittleProps<Data> {\n  return {\n    top: { name: t('Deleted status'), align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  };\n}\nexport function datesColumn<Data extends IBase = any>(): CellTittleProps<Data> {\n  return {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  };\n}\n\nconst OfferSortPaths = [\n  'label',\n  'barCode',\n  'sku',\n  'approved',\n  'deletedAt',\n  'updatedAt',\n  'createdAt',\n  'brand.label',\n  'warehouse.label',\n  'warehouse.code',\n  'price.out',\n  'variations.label',\n  'variations.barCode',\n  'variations.sku',\n  'variations.price.out',\n  'variations.deletedAt',\n  'variations.updatedAt',\n  'variations.createdAt',\n] as const;\n\nexport type OfferSortParam = TableSortParam<Values<typeof OfferSortPaths> | string>;\nexport const offersSortParams: OfferSortParam[] = [\n  { dataPath: 'sku', label: 'SKU' },\n  { dataPath: 'label', label: t('Label') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'approved', label: t('Status') },\n  { dataPath: 'price.out', label: t('Price') },\n\n  { dataPath: 'createdAt', label: t('Created at') },\n  { dataPath: 'updatedAt', label: t('Updated at') },\n  { dataPath: 'deletedAt', label: t('Deleted at') },\n\n  { dataPath: 'brand.label', label: t('Brand label') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n];\n\nexport type OfferSearchParam = TableSearchParam<Values<typeof OfferSortPaths> | string>;\nexport const offersSearchParams: OfferSearchParam[] = [\n  { dataPath: 'sku', label: 'SKU' },\n  { dataPath: 'label', label: t('Label') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n  { dataPath: 'brand.label', label: t('Brand label') },\n];\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { OrderEntity, OrderStatusEnum } from '../types/orders/orders.types';\nimport { IOrderTempSlot, OrderSlotEntity } from '../types/orders/order-slot.types';\nimport { t } from '../i18e';\nimport { TableSearchParam, TableSortParam } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { getStatusesByEnum } from './statuses.data';\nimport { getBasePriceColumns } from './priceManagement.data';\nimport { toPrice } from '../utils/numbers';\nimport { Values } from '../types/utils.types';\n\nconst createdDateColumn: CellTittleProps = {\n  top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n  bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n  width: '150px',\n  action: 'dateDbl',\n};\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\n// export type DataPath =\n//   | 'owner.label'\n//   | 'owner.name'\n//   | 'author.name'\n//   | 'author.email'\n//   | 'editor.name'\n//   | 'editor.email'\n//   | 'auditor.name'\n//   | 'auditor.email'\n//   | 'contractor.name'\n//   | 'contractor.type'\n//   | 'eventDate'\n//   | 'type'\n//   | 'status'\n//   | 'amount'\n//   | 'currency'\n//   | 'comment'\n//   | 'createdAt'\n//   | 'updatedAt'\n//   | 'mark.label'\n//   | 'invoice.label'\n//   | 'invoice.code'\n//   | 'invoice.number'\n//   | 'payment.label'\n//   | 'payment.code'\n//   | 'payment.number'\n//   | 'order.code'\n//   | 'total'\n//   | 'manager.name'\n//   | 'manager.code'\n//   | 'manager.email'\n//   | 'customer.name'\n//   | 'customer.phone'\n//   | 'receiver.name'\n//   | 'receiver.phone'\n//   | 'invoices'\n//   | 'payments'\n//   | 'transporters';\n\nexport const ordersTableColumns: CellTittleProps<OrderEntity>[] = [\n  {\n    top: {\n      name: `${t('Status')}`,\n      getData: rd => rd.status,\n    },\n    bottom: { name: t('Priority'), getData: _rd => t('undefined') },\n\n    // bottom: {\n    //   name: `${t('Status')}/${t('External')}`,\n    //   getData: rd => rd.status?.external,\n    // },\n    width: '150px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('Total amount'),\n      align: 'end',\n      getData: rd => toPrice(rd.summary?.netto ?? 0),\n    },\n    bottom: { name: t('Slots count'), align: 'end', getData: rd => rd.slots?.length || rd.summary?.slotsCount },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Reference / Internal'), getData: rd => rd?.reference?.internal },\n    bottom: { name: t('Reference / External'), getData: rd => rd?.reference?.external },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Group'), getData: rd => rd?.group?.reference?.internal },\n    bottom: { name: t('Strategy'), getData: rd => rd?.group?.strategy },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Customer'),\n      getData: rd =>\n        (rd.customer?.name && rd.customer?.name?.first + ' ' + rd.customer?.name?.second) ||\n        (rd.customer?.label && rd.customer?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Receiver'),\n      getData: rd =>\n        (rd.receiver?.name && rd.receiver?.name?.first + ' ' + rd.receiver?.name?.second) ||\n        (rd.receiver?.label && rd.receiver?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Deliveries') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  createdDateColumn,\n];\n\nconst extraKeys: ('cashback' | 'bonus' | 'discount')[] = ['cashback', 'bonus', 'discount'];\nfunction getTempOrderSlotColumns(): CellTittleProps<OrderSlotEntity>[] {\n  return extraKeys.map(key => {\n    return {\n      top: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.amount) },\n      bottom: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.percentage) },\n      action: 'valueByPath',\n      width: '90px',\n    };\n  });\n}\n\nexport const orderSlotsTableColumns: CellTittleProps<OrderSlotEntity>[] = [\n  {\n    top: { name: t('Offer label'), getData: rd => rd.offer?.label },\n    bottom: { name: t('Variation label'), getData: rd => rd.variation?.label },\n    action: 'valueByPath',\n    width: '210px',\n  },\n  {\n    top: { name: t('Total amount'), getData: rd => rd.netto },\n    bottom: { name: t('Total q-ty'), getData: rd => rd.quantity },\n    action: 'valueByPath',\n    width: '125px',\n  },\n  ...getBasePriceColumns(),\n  ...getTempOrderSlotColumns(),\n  {\n    top: { name: t('Offer sku'), getData: rd => rd.offer?.sku },\n    bottom: { name: t('Variation sku'), getData: rd => rd.variation?.sku },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Offer bar-code'), getData: rd => rd.offer?.barCode },\n    bottom: { name: t('Variation bar-code'), getData: rd => rd.variation?.barCode },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  createdDateColumn,\n];\n\nexport const tempOrderSlotTableColumns: CellTittleProps<IOrderTempSlot>[] =\n  orderSlotsTableColumns as CellTittleProps<IOrderTempSlot>[];\n\nconst OrdersAllowedPaths = [\n  'manager.email',\n  'manager.code',\n\n  'managers.email',\n  'managers.code',\n\n  'customer.email',\n  'customer.phone',\n  'customer.name.first',\n  'customer.name.second',\n  'customer.reference',\n\n  'receiver.email',\n  'receiver.phone',\n  'receiver.name.first',\n  'receiver.name.second',\n  'receiver.reference',\n\n  'barCode',\n  'reference.internal',\n  'reference.external',\n\n  'group.reference.internal',\n  'group.reference.external',\n\n  'status',\n  'deletedAt',\n  'updatedAt',\n  'createdAt',\n\n  'warehouse.label',\n  'warehouse.code',\n\n  // 'variations.label',\n  // 'variations.barCode',\n  // 'variations.sku',\n  // 'variations.price.out',\n  // 'variations.deletedAt',\n  // 'variations.updatedAt',\n  // 'variations.createdAt',\n] as const;\n\nexport type SaleOrdersSortParam = TableSortParam<Values<typeof OrdersAllowedPaths>>;\nexport const ordersSortParams: SaleOrdersSortParam[] = [\n  { dataPath: 'reference.internal', label: t('Reference / Internal') },\n  { dataPath: 'reference.external', label: t('Reference / External') },\n\n  { dataPath: 'group.reference.internal', label: t('Reference / Internal') + ` / ${t('Group').toLowerCase()}` },\n  { dataPath: 'group.reference.external', label: t('Reference / External') + ` / ${t('Group').toLowerCase()}` },\n\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'status', label: t('Status') },\n\n  { dataPath: 'manager.email', label: t('Manager email') },\n  { dataPath: 'manager.code', label: t('Manager code') },\n  { dataPath: 'managers.email', label: t('Any managers email') },\n  { dataPath: 'managers.code', label: t('Any managers code') },\n\n  { dataPath: 'customer.email', label: t('Customer email') },\n  { dataPath: 'customer.phone', label: t('Customer phone') },\n  { dataPath: 'customer.name.first', label: t('Customer first name') },\n  { dataPath: 'customer.name.second', label: t('Customer second name') },\n  { dataPath: 'customer.reference', label: t('Customer reference') },\n\n  { dataPath: 'receiver.email', label: t('Customer email') },\n  { dataPath: 'receiver.phone', label: t('Customer phone') },\n  { dataPath: 'receiver.name.first', label: t('Customer first name') },\n  { dataPath: 'receiver.name.second', label: t('Customer second name') },\n  { dataPath: 'receiver.reference', label: t('Customer reference') },\n\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n\n  { dataPath: 'createdAt', label: t('Created at') },\n  { dataPath: 'updatedAt', label: t('Updated at') },\n  { dataPath: 'deletedAt', label: t('Deleted at') },\n];\n\nexport type SaleOrdersSearchParam = TableSearchParam<Values<typeof OrdersAllowedPaths>>;\nexport const ordersSearchParams: SaleOrdersSearchParam[] = [\n  { dataPath: 'reference.internal', label: t('Reference / Internal') },\n  { dataPath: 'reference.external', label: t('Reference / External') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n  { dataPath: 'manager.email', label: t('Manager email') },\n  { dataPath: 'manager.code', label: t('Manager code') },\n  { dataPath: 'managers.email', label: t('Any managers email') },\n  { dataPath: 'managers.code', label: t('Any managers code') },\n];\n","import { IBase } from '../global.types';\n\nexport enum ImageSetSrcType {\n  img_preview = 'img_preview',\n  img_1x = 'img_1x',\n  img_2x = 'img_2x',\n  webp = 'webp',\n}\n\nexport interface OfferImageSlotEntity extends Partial<IBase> {\n  img_preview?: string;\n  img_1x?: string;\n  img_2x?: string;\n  webp?: string;\n  order: number;\n\n  mimeType?: string;\n}\n"],"names":["validation","yup","shape","label","required","description","max","optional","_ref","_formValues$type","_errors$bank","_errors$bank2","_errors$bank3","defaultState","props","onSubmit","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","loaders","useLoaders","dispatch","useAppDispatch","_useAppForm","useAppForm","defaultValues","_objectSpread","resolver","yupResolver","reValidateMode","errors","formState","register","handleSubmit","getFieldState","formValues","setValue","getOnSubmit","name","_ref2","withMethod","fData","_excluded2","submitData","omit","pick","console","log","concat","_id","updateBankAccountThunk","data","toReqData","onLoading","onSuccess","_ref4","ToastService","createBankAccountThunk","params","_ref3","registerFormArea","canSubmit","isDirty","disabled","isLoading","bank","main","_jsxs","ModalBase","children","AccordionForm","_jsx","InputLabel","t","error","InputText","placeholder","autoFocus","iban","holder","taxCode","type","TagButtonsFilter","options","BankAccountTypeFilterOptions","value","undefined","onSelect","option","shouldTouch","shouldDirty","ButtonSwitch","onChange","v","Text","$size","$weight","$padding","FormAfterSubmitOptions","OfferStatusFilterOptions","getStatusesByEnum","OfferStatusEnum","enumToFilterOptions","formAddImageSetTabs","ImageSetSrcType","offersTableColumns","top","getData","rd","getImgPreview","pr","_pr$images","_pr$images$","images","img_preview","width","action","sku","bottom","barCode","path","d","approved","visible","align","_d$price","_d$price2","price","out","toPrice","_d$price3","_d$price4","in","_d$variation","variation","_d$variation2","_d$warehouse","warehouse","_d$warehouse2","code","_rd$brand","brand","_rd$brand2","manufacturer","_rd$editor$user$email","_rd$editor","_rd$editor$user","editor","user","email","_rd$author$user$email","_rd$author","_rd$author$user","author","offersSortParams","dataPath","offersSearchParams","createdDateColumn","ordersTableColumns","OrderStatusEnum","status","_rd","_rd$summary$netto","_rd$summary","summary","netto","_rd$slots","_rd$summary2","slots","length","slotsCount","_rd$reference","reference","internal","_rd$reference2","external","_rd$group","_rd$group$reference","group","_rd$group2","strategy","_rd$customer","_rd$customer2","_rd$customer2$name","_rd$customer3","_rd$customer3$name","_rd$customer4","_rd$customer5","customer","first","second","base","_rd$receiver","_rd$receiver2","_rd$receiver2$name","_rd$receiver3","_rd$receiver3$name","_rd$receiver4","_rd$receiver5","receiver","extraKeys","orderSlotsTableColumns","_rd$offer","offer","_rd$variation","quantity","_toConsumableArray","getBasePriceColumns","map","key","_rd$key","amount","_rd$key2","percentage","_rd$offer2","_rd$variation2","_rd$offer3","_rd$variation3","tempOrderSlotTableColumns","ordersSortParams","toLowerCase","ordersSearchParams"],"sourceRoot":""}