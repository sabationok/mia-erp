{"version":3,"file":"static/js/152.ec6873f3.chunk.js","mappings":"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","sources":["components/AppPages/pagesStyles.tsx","hooks/useWarehousesActionsCreator.hook.ts","components/AppPages/warehousing/PageWarehouses.tsx","data/warehauses.data.ts"],"sourcesContent":["import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import { ITableAction, ITableListContext } from '../components/TableList/tableTypes.types';\nimport { IModalProviderContext, useModalProvider } from '../Providers/ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from './useAppServices.hook';\nimport { WarehousesService } from './useWarehousesService.hook';\nimport { WarehouseEntity, IWarehouseDto, IWarehouseReqData } from '../types/warehousing/warehouses.types';\nimport { Modals } from '../components/Modals/Modals';\nimport { IWarehouseFormData } from '../components/Forms/warehousing/FormCreateWarehouse';\nimport { useNavigate } from 'react-router-dom';\nimport { NavigateFunction } from 'react-router/dist/lib/hooks';\nimport { ToastService } from '../services';\nimport { checks } from '../utils';\nimport { getIdRef } from '../utils/data-transform';\nimport _ from 'lodash';\n\nexport type WarehouseActionCreatorOptions = {\n  ctx: ITableListContext<WarehouseEntity>;\n  service: WarehousesService;\n  modalService: IModalProviderContext;\n  navigate: NavigateFunction;\n};\nconst createWarehouseReqData = (input: IWarehouseFormData, _id?: string): IWarehouseReqData => {\n  let dto = {} as IWarehouseDto;\n\n  (Object.keys(input) as (keyof IWarehouseFormData)[]).forEach(k => {\n    const v = input[k] as IWarehouseFormData[typeof k];\n\n    if (!v) {\n      return;\n    }\n    if (checks.isStr(v)) {\n      dto = { ...dto, [k]: v };\n      return;\n    }\n    if (!checks.isEmptyObj(v)) {\n      if (checks.hasUUID(v)) {\n        dto = { ...dto, [k]: getIdRef(v) };\n        return;\n      }\n      console.log('!checks.isEmptyObj(v)', k, !checks.isEmptyObj(v));\n      dto = { ...dto, [k]: v };\n      return k;\n    }\n    if (v) {\n      dto = { ...dto, [k]: v };\n      return;\n    }\n\n    return k;\n  });\n\n  if (_id) {\n    return {\n      _id,\n      data: dto,\n      params: {\n        setAsDefault: input?.asDefault,\n      },\n    };\n  }\n  return {\n    data: dto,\n    params: {\n      setAsDefault: input?.asDefault,\n    },\n  };\n};\n\nexport type WarehouseActionGenerator = (options: WarehouseActionCreatorOptions) => ITableAction;\nexport type WarehouseTableActionsCreator = (ctx: ITableListContext) => ITableAction[];\n\nconst createNewWarehouseAction: WarehouseActionGenerator = ({ service, modalService, ctx }) => {\n  return {\n    icon: 'plus',\n    type: 'onlyIconFilled',\n    onClick: () => {\n      const modal = modalService.openModal({\n        Modal: Modals.FormCreateWarehouse,\n        props: {\n          title: 'Створити склад',\n          onSubmit: (data, o) => {\n            service.create({\n              data: createWarehouseReqData(_.omit(data, ['manager']), ctx?.selectedRow?._id),\n              onLoading: ctx.onRefresh,\n              onSuccess: () => {\n                if (data?.asDefault) {\n                  ToastService.info('Warehouse wil be set as default');\n                }\n\n                if (o?.close && modal?.onClose) {\n                  modal?.onClose();\n                }\n              },\n            });\n          },\n        },\n      });\n    },\n  };\n};\nconst editWarehouseAction: WarehouseActionGenerator = ({ service, modalService, ctx }) => {\n  return {\n    icon: 'edit',\n    onClick: () => {\n      const m = modalService.openModal({\n        Modal: Modals.FormCreateWarehouse,\n        props: {\n          update: ctx.selectedRow?._id,\n          title: 'Оновити дані складу',\n          onSubmit: (data, o) => {\n            service.create({\n              data: createWarehouseReqData(_.omit(data, ['manager']), ctx?.selectedRow?._id),\n              onLoading: ctx.onRefresh,\n              onSuccess: () => {\n                if (o?.close && m?.onClose) {\n                  m?.onClose();\n                }\n              },\n            });\n          },\n        },\n      });\n    },\n  };\n};\nconst refreshWarehousesDataAction: WarehouseActionGenerator = arg => {\n  return {\n    icon: 'refresh',\n    onClick: () => {\n      arg.service.getAll({ data: { refresh: true } }).then();\n    },\n  };\n};\n\nconst actionCreators: WarehouseActionGenerator[] = [\n  refreshWarehousesDataAction,\n  () => ({ separator: true }),\n  ({ ctx, navigate }) => ({\n    icon: 'openInNew',\n    disabled: !ctx.selectedRow?._id,\n    onClick: () => {\n      ctx.selectedRow?._id && navigate(ctx.selectedRow?._id);\n    },\n  }),\n  editWarehouseAction,\n  () => ({ icon: 'delete' }),\n  () => ({ separator: true }),\n  createNewWarehouseAction,\n];\n\nexport type UseWarehousesActionsCreatorOptions = { service: WarehousesService };\nconst useWarehousesActionsCreator = (): WarehouseTableActionsCreator => {\n  const modalService = useModalProvider();\n  const service = useAppServiceProvider()[ServiceName.warehouses];\n  const navigate = useNavigate();\n\n  return (ctx: ITableListContext<WarehouseEntity>) =>\n    actionCreators.map(a => a({ modalService, service, ctx, navigate }));\n};\n\nexport default useWarehousesActionsCreator;\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from '../pagesStyles';\nimport styled from 'styled-components';\nimport { useEffect, useMemo, useState } from 'react';\nimport { ITableListProps } from '../../TableList/tableTypes.types';\nimport AppGridPage from '../AppGridPage';\nimport { useWarehousesSelector } from '../../../redux/selectors.store';\nimport { ApiQuerySortParams } from '../../../api';\nimport { FilterReturnDataType } from '../../Filter/AppFilter';\nimport useWarehousesActionsCreatorHook from '../../../hooks/useWarehousesActionsCreator.hook';\nimport { warehousesTableColumns } from '../../../data/warehauses.data';\nimport { WarehouseEntity } from '../../../types/warehousing/warehouses.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useNavigate } from 'react-router-dom';\nimport { BaseAppPageProps } from '../index';\n\ninterface Props extends BaseAppPageProps {}\n\nconst PageWarehouses: React.FC<any> = (props: Props) => {\n  const navigate = useNavigate();\n  const { getAll } = useAppServiceProvider()[ServiceName.warehouses];\n  const state = useWarehousesSelector();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ApiQuerySortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n  const actionsCreator = useWarehousesActionsCreatorHook();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<WarehouseEntity> => ({\n      tableData: state.list,\n      tableTitles: warehousesTableColumns,\n      hasFilter: false,\n      hasSearch: true,\n      showFooter: false,\n      actionsCreator,\n      onRowDoubleClick(ev) {\n        ev?.rowId && navigate(ev?.rowId);\n      },\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      onTableSortChange: (param, sortOrder) => {\n        setSortParams({ sortPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { sortPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [actionsCreator, filterParams, getAll, navigate, sortParams, state.list]\n  );\n\n  useEffect(() => {\n    if (sortParams || filterParams) {\n      return;\n    }\n\n    if (!sortParams && !filterParams) {\n      if (state.list.length === 0) {\n        getAll({\n          data: { refresh: true },\n          onLoading: setIsLoading,\n          onSuccess(_data) {\n            console.log('PageWarehouses onSuccess getAll');\n          },\n        });\n      }\n    }\n  }, [filterParams, getAll, sortParams, state.list.length]);\n  return (\n    <AppGridPage path={props.path}>\n      <Page>\n        <TableList tableTitles={warehousesTableColumns} {...tableConfig} isLoading={isLoading} />\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\n\nexport default PageWarehouses;\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { WarehouseEntity, WarehouseItemEntity } from '../types/warehousing/warehouses.types';\nimport { t } from '../i18e';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<WarehouseEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email'), path: 'email' },\n    bottom: { name: t('phone'), path: 'phone' },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["takeFullGridArea","css","_templateObject","_taggedTemplateLiteral","takeFullPlace","_templateObject2","_templateObject3","createWarehouseReqData","input","_id","dto","Object","keys","forEach","k","v","checks","_objectSpread","_defineProperty","getIdRef","console","log","data","params","setAsDefault","asDefault","actionCreators","arg","icon","onClick","service","getAll","refresh","then","separator","_ref3","_ctx$selectedRow4","ctx","navigate","disabled","selectedRow","_ctx$selectedRow5","_ctx$selectedRow6","_ref2","modalService","_ctx$selectedRow2","m","openModal","Modal","Modals","props","update","title","onSubmit","o","_ctx$selectedRow3","create","_","onLoading","onRefresh","onSuccess","close","onClose","_ref","type","modal","_ctx$selectedRow","ToastService","useModalProvider","useAppServiceProvider","ServiceName","useNavigate","map","a","Page","styled","state","useWarehousesSelector","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","sortParams","setSortParams","_useState5","_useState6","filterParams","setFilterParams","actionsCreator","useWarehousesActionsCreatorHook","tableConfig","useMemo","tableData","list","tableTitles","warehousesTableColumns","hasFilter","hasSearch","showFooter","onRowDoubleClick","ev","rowId","onFilterSubmit","query","onTableSortChange","param","sortOrder","sortPath","dataPath","useEffect","length","_data","_jsx","AppGridPage","path","children","TableList","top","name","t","getData","rd","label","bottom","code","width","action","address","concat","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","user","_rd$manager2","_rd$manager2$user","email","align","warehouseOverviewTableColumns","_rd$variation","variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","offer","images","img_preview","_rd$variation2","sku","_rd$variation3","barCode","stock","reserved","awaiting","lost","_rd$warehouse","warehouse","_rd$warehouse2","batchPricesColumns","_d$price","numberWithSpaces","Number","price","in","_d$price2","out","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}