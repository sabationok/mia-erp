{"version":3,"file":"static/js/156.5548edd6.chunk.js","mappings":"sRA2FA,UA9DgE,SAAHA,GACpDA,EAAPC,QAKK,IAJLC,EAAQF,EAARE,SACAC,EAAWH,EAAXG,YAEGC,GADCJ,EAAJK,MACQC,EAAAA,EAAAA,GAAAN,EAAAO,IAEFC,GAAgBC,EAAAA,EAAAA,KACtBC,GAKIC,EAAAA,EAAAA,IAAyB,CAC3BC,eAAeC,EAAAA,EAAAA,MAAKV,EAAa,CAAC,YAAa,YAAa,UAC5DW,EAAAJ,EANAK,UAAaC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QACrBC,EAAQR,EAARQ,SACAC,EAAQT,EAARS,SACAC,EAAYV,EAAZU,aAeF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRN,QAASA,EACTf,SAAUkB,GAbQ,SAACI,GAAkB,OACvCtB,GACAA,EACE,CACEsB,KAAAA,EACAC,IAAgB,OAAXtB,QAAW,IAAXA,OAAW,EAAXA,EAAasB,MACnBF,EAAAA,EAAAA,GAAA,GACIf,EAAckB,OACnB,IAMAC,MAAO,qBACHvB,GAAK,IACTwB,aAAW,EACXC,YAAa,SAACC,EAAIC,GAChBZ,EAAS,OAAQY,EACnB,EACAC,aAAaX,EAAAA,EAAAA,KAACY,EAAAA,GAAsBV,EAAAA,EAAAA,GAAA,GAAKf,IAAkB0B,UAE3DC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,YAAa,SAAUC,QAAS,aAAaJ,SAAA,EACpDb,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAE,SAAUC,UAAW,WAAYC,MAAO3B,EAAOwB,MAAOI,UAAQ,EAAAV,UACjFb,EAAAA,EAAAA,KAACwB,EAAAA,IAAStB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACuB,aAAaL,EAAAA,EAAAA,GAAE,UAAcvB,EAAS,UAAQ,IAAE0B,UAAQ,EAACG,WAAS,QAG/EZ,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,YAAa,MAAOW,IAAK,EAAEd,SAAA,EAClCb,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAE,YAAaC,UAAW,WAAYC,MAAO3B,EAAOiC,SAAUL,UAAQ,EAAAV,UACvFb,EAAAA,EAAAA,KAACwB,EAAAA,IAAStB,EAAAA,EAAAA,GAAA,CAACuB,aAAaL,EAAAA,EAAAA,GAAE,YAAaS,KAAM,kBAAsBhC,EAAS,iBAG9EG,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAE,UAAWC,UAAW,WAAYC,MAAO3B,EAAOmC,OAAQP,UAAQ,EAAAV,UACnFb,EAAAA,EAAAA,KAACwB,EAAAA,IAAStB,EAAAA,EAAAA,GAAA,CAACuB,aAAaL,EAAAA,EAAAA,GAAE,UAAWS,KAAM,kBAAsBhC,EAAS,kBAI9EG,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAE,eAAgBC,UAAW,WAAYC,MAAO3B,EAAOoC,YAAYlB,UACpFb,EAAAA,EAAAA,KAACgC,EAAAA,GAAe9B,EAAAA,EAAAA,GAAA,CAACuB,aAAaL,EAAAA,EAAAA,GAAE,gBAAoBvB,EAAS,wBAKvE,C","sources":["components/Forms/pricing/FormCreatePriceList.tsx"],"sourcesContent":["import {\n  IPriceListReqData,\n  PriceListDto,\n  PriceListEntity,\n  PriceListType,\n} from '../../../types/price-management/price-management.types';\nimport ModalForm, { ModalFormProps } from '../../ModalForm';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { useAppForm } from '../../../hooks';\nimport { omit } from 'lodash';\nimport FlexBox from '../../atoms/FlexBox';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport { t } from '../../../i18e';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../../atoms/FormAfterSubmitOptions';\nimport TextareaPrimary from '../../atoms/Inputs/TextareaPrimary';\n\nexport interface FormCreatePriceListProps extends Omit<ModalFormProps<PriceListType>, 'onSubmit' | 'afterSubmit'> {\n  defaultData?: Partial<PriceListEntity>;\n  edit?: boolean;\n  onSubmit?: AppSubmitHandler<\n    IPriceListReqData,\n    {\n      onSuccess?: (data: PriceListEntity) => void;\n      onError?: () => void;\n    }\n  >;\n}\n\nconst FormCreatePriceList: React.FC<FormCreatePriceListProps> = ({\n  options,\n  onSubmit,\n  defaultData,\n  edit,\n  ...props\n}) => {\n  const submitOptions = useAfterSubmitOptions();\n  const {\n    formState: { errors, isValid },\n    register,\n    setValue,\n    handleSubmit,\n  } = useAppForm<PriceListDto>({\n    defaultValues: omit(defaultData, ['createdAt', 'updatedAt', '_id']),\n  });\n\n  const onValidSubmit = (data: PriceListDto) =>\n    onSubmit &&\n    onSubmit(\n      {\n        data,\n        _id: defaultData?._id,\n      },\n      { ...submitOptions.state }\n    );\n\n  return (\n    <ModalForm\n      isValid={isValid}\n      onSubmit={handleSubmit(onValidSubmit)}\n      title={'Create price list'}\n      {...props}\n      fitContentV\n      onOptSelect={(_0, value) => {\n        setValue('type', value);\n      }}\n      extraFooter={<FormAfterSubmitOptions {...submitOptions} />}\n    >\n      <FlexBox fxDirection={'column'} padding={'0 2px 12px'}>\n        <InputLabel label={t('label')} direction={'vertical'} error={errors.label} required>\n          <InputText placeholder={t('label')} {...register('label')} required autoFocus />\n        </InputLabel>\n\n        <FlexBox fxDirection={'row'} gap={8}>\n          <InputLabel label={t('timeFrom')} direction={'vertical'} error={errors.timeFrom} required>\n            <InputText placeholder={t('timeFrom')} type={'datetime-local'} {...register('timeFrom')} />\n          </InputLabel>\n\n          <InputLabel label={t('timeTo')} direction={'vertical'} error={errors.timeTo} required>\n            <InputText placeholder={t('timeTo')} type={'datetime-local'} {...register('timeTo')} />\n          </InputLabel>\n        </FlexBox>\n\n        <InputLabel label={t('description')} direction={'vertical'} error={errors.description}>\n          <TextareaPrimary placeholder={t('description')} {...register('description')} />\n        </InputLabel>\n      </FlexBox>\n    </ModalForm>\n  );\n};\n\nexport default FormCreatePriceList;\n"],"names":["_ref","options","onSubmit","defaultData","props","edit","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useAppForm","useAppForm","defaultValues","omit","_useAppForm$formState","formState","errors","isValid","register","setValue","handleSubmit","_jsx","ModalForm","_objectSpread","data","_id","state","title","fitContentV","onOptSelect","_0","value","extraFooter","FormAfterSubmitOptions","children","_jsxs","FlexBox","fxDirection","padding","InputLabel","label","t","direction","error","required","InputText","placeholder","autoFocus","gap","timeFrom","type","timeTo","description","TextareaPrimary"],"sourceRoot":""}