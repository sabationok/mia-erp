{"version":3,"file":"static/js/903.aa4efaf8.chunk.js","mappings":"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","sources":["schemas/directories/index.ts","components/Forms/Directories/FormCreateCategory.tsx"],"sourcesContent":["import * as YUP from 'yup';\nimport * as yup from 'yup';\nimport { IsEnum, IsString255, isString500, IsString64, IsUUID } from '../schemas';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\nimport { FinCategoryFormData, FinTransactionTypeEnum } from '../../types/directories.types';\n\nconst dirItemBaseSchema = yup.object().shape({\n  label: IsString255(),\n  description: isString500(),\n});\nexport const finCategorySchema: YUP.ObjectSchema<FinCategoryFormData> = dirItemBaseSchema.shape({\n  _id: IsUUID(),\n  parentId: IsUUID(),\n  dirType: IsEnum(ApiDirType).required(),\n  type: IsEnum(FinTransactionTypeEnum).required(),\n  code: IsString64(),\n  taxCode: IsString64(),\n  parent: YUP.lazy(() => finCategorySchema),\n});\n","import ModalForm from 'components/ModalForm';\nimport { FinCategoryEntity, FinCategoryFormData } from 'types/directories.types';\nimport React from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport TextareaPrimary from '../../atoms/Inputs/TextareaPrimary';\nimport { t } from '../../../i18e';\nimport { DirectoriesFormProps } from '../../../types/dir.types';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../../atoms/FormAfterSubmitOptions';\nimport { useAppForm } from '../../../hooks';\nimport { ApiDirType } from '../../../redux/APP_CONFIGS';\nimport { FormInputs } from '../components/atoms';\nimport { finCategorySchema } from '../../../schemas/directories';\n\nexport interface FormCreateCategoryProps\n  extends DirectoriesFormProps<\n    ApiDirType.CATEGORIES_PROD & ApiDirType.CATEGORIES_TR,\n    FinCategoryEntity,\n    FinCategoryFormData\n  > {}\n\nconst FormCreateCategory: React.FC<FormCreateCategoryProps> = ({\n  _id,\n  type,\n  edit,\n  defaultState,\n  onSubmit,\n  dirType,\n  parent,\n  ...props\n}) => {\n  const submitOptions = useAfterSubmitOptions();\n\n  const {\n    formState: { errors, isValid },\n    register,\n    handleSubmit,\n    formValues,\n  } = useAppForm<FinCategoryFormData>({\n    defaultValues: defaultState ?? undefined,\n    resolver: yupResolver(finCategorySchema),\n    reValidateMode: 'onSubmit',\n    mode: 'onChange',\n  });\n\n  const onValid = (data: FinCategoryFormData) => {\n    console.log('FormCreateCategory on valid', { defaultState, data });\n\n    onSubmit &&\n      onSubmit(data, {\n        ...submitOptions.state,\n      });\n  };\n  return (\n    <ModalForm\n      {...props}\n      onSubmit={handleSubmit(onValid)}\n      isValid={isValid}\n      extraFooter={<FormAfterSubmitOptions {...submitOptions} />}\n    >\n      <FormInputs>\n        <InputLabel label={t('type')} direction={'vertical'} error={errors.type} disabled>\n          <InputText defaultValue={type ? t(type).toUpperCase() : type} disabled />\n        </InputLabel>\n\n        {defaultState?.parent?._id && (\n          <InputLabel label={t('parentItem')} direction={'vertical'} error={errors.type} disabled>\n            <InputText value={formValues.parent?.label ?? undefined} disabled />\n          </InputLabel>\n        )}\n\n        <InputLabel label={t('label')} direction={'vertical'} error={errors.label} required>\n          <InputText placeholder={t('insertLabel')} {...register('label')} required autoFocus />\n        </InputLabel>\n\n        <InputLabel label={t('comment')} direction={'vertical'} error={errors.description}>\n          <TextareaPrimary placeholder={t('insertComment')} {...register('description')} maxLength={250} />\n        </InputLabel>\n      </FormInputs>\n    </ModalForm>\n  );\n};\n\nexport default FormCreateCategory;\n"],"names":["finCategorySchema","yup","shape","label","IsString255","description","isString500","_id","IsUUID","parentId","dirType","IsEnum","ApiDirType","required","type","FinTransactionTypeEnum","code","IsString64","taxCode","parent","YUP","_ref","_defaultState$parent","_formValues$parent$la","_formValues$parent","defaultState","edit","onSubmit","props","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useAppForm","useAppForm","defaultValues","undefined","resolver","yupResolver","reValidateMode","mode","_useAppForm$formState","formState","errors","isValid","register","handleSubmit","formValues","_jsx","ModalForm","_objectSpread","data","console","log","state","extraFooter","FormAfterSubmitOptions","children","_jsxs","FormInputs","InputLabel","t","direction","error","disabled","InputText","defaultValue","toUpperCase","value","placeholder","autoFocus","TextareaPrimary","maxLength"],"sourceRoot":""}