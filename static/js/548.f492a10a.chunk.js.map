{"version":3,"file":"static/js/548.f492a10a.chunk.js","mappings":"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","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/Overviews/order/compnents/OrderOverviewCustomerInfo.tsx","components/Overviews/order/tabs/OrderOverviewInfoTab.tsx","components/Overviews/order/compnents/OrderOverviewTotals.tsx","components/Overviews/order/compnents/OrderOverviewInvoicing.tsx","components/Overviews/order/compnents/OrderOverviewDelivery.tsx","Providers/CurrentOrderProvider.tsx","components/Ws/ChatWsInitializer.tsx","components/Chat/components/ChatMessage.tsx","components/Chat/components/ChatForm.tsx","components/Chat/Chat.tsx","components/Overviews/order/tabs/OrderChatTab.tsx","components/Overviews/order/OrderOverviewXL.tsx","components/AppPages/orders/PageOrderOverviewLeftSide.tsx","components/AppPages/orders/tabs/OrderContentTab.tsx","components/AppPages/orders/tabs/OrderInvoicesTab.tsx","components/AppPages/orders/tabs/OrderPaymentsTab.tsx","components/AppPages/orders/tabs/OrderDeliveriesTab.tsx","components/AppPages/orders/PageOrderOverviewTabs.tsx","components/AppPages/orders/PageOrderOverview.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewAreaHeader.tsx","components/Overviews/components/OverviewTextArea.tsx","components/atoms/index.tsx"],"sourcesContent":["import { CreatedOverlay, useOverlayService } from './OverlayStackProvider';\nimport React, { createContext, MouseEventHandler, useCallback, useContext, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport interface OverlayLocalValue extends CreatedOverlay {}\nexport const OverlayLocalCTX = createContext<OverlayLocalValue>({});\nexport const useOverlay = () => useContext(OverlayLocalCTX);\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <OverlayLocalCTX.Provider\n            value={{\n              onClose: () => {\n                overlaySrv.remove(id);\n              },\n              compId: id,\n              index: index,\n            }}\n          >\n            <RenderComponent\n              key={`overlay-${id}`}\n              {...props}\n              onClose={() => {\n                overlaySrv.remove(id);\n              }}\n              compId={id}\n              index={index}\n            />\n          </OverlayLocalCTX.Provider>\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 200;\n\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  background-color: ${p => p.theme.backdropColorDark};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  height: 100%;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  create: OverlayCreator;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\n\nexport type OverlayCreator = <Props = any>(\n  Component: React.FC<OverlayRenderComponentProps<Props>>,\n  props?: OverlayRenderComponentProps<Props>\n) => CreatedOverlay;\n\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n    create: (Component, props) => createOverlayComponent({ RenderComponent: Component, props }),\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import { RenderOverviewAreaComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { AreaStyledComp } from '../../components/CellStyles';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { t } from '../../../../i18e';\nimport { useMemo } from 'react';\nimport { OverviewAreaHeader } from '../../components/OverviewAreaHeader';\n\nexport const OrderOverviewCustomerInfo: RenderOverviewAreaComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const customer = data?.customer;\n\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      {\n        label: t('First name'),\n        value: customer?.name?.first,\n        visible: customer?.businessType !== 'company',\n      },\n      {\n        label: t('Second name'),\n        value: customer?.name?.second,\n        visible: customer?.businessType !== 'company',\n      },\n      {\n        label: t('Middle name'),\n        value: customer?.name?.middle,\n        visible: customer?.businessType !== 'company',\n      },\n\n      {\n        label: t('Base label'),\n        value: customer?.name?.first,\n        visible: customer?.businessType !== 'person',\n      },\n      { label: t('Print'), value: customer?.name?.second, visible: customer?.businessType !== 'person' },\n\n      { label: t('Email'), value: customer?.email, visible: true },\n      { label: t('Phone'), value: customer?.phone, visible: true },\n\n      { label: t('Business type'), value: customer?.businessType, visible: true },\n      { label: t('Sex type'), value: customer?.sexType, visible: true },\n\n      { label: t('Engagement type'), value: customer?.engagementSource, visible: true },\n\n      { label: t('Age'), value: customer?.age, visible: true },\n\n      { label: t('Tags'), value: null, visible: true },\n    ];\n\n    return cells.map(cell => {\n      return (\n        cell.visible && (\n          <FlexBox\n            key={cell.label}\n            fxDirection={'row'}\n            padding={'6px'}\n            gap={8}\n            alignItems={'center'}\n            justifyContent={'space-between'}\n          >\n            <Text $size={11}>{cell?.label}</Text>\n            <Text $size={13} $weight={500}>\n              {cell?.value ?? t('undefined')}\n            </Text>\n          </FlexBox>\n        )\n      );\n    });\n  }, [data?.customer]);\n\n  return (\n    <AreaStyledComp.Cell>\n      {cell?.title && <OverviewAreaHeader title={cell?.title} />}\n\n      {renderCells}\n    </AreaStyledComp.Cell>\n  );\n};\n","import FlexBox from '../../../atoms/FlexBox';\nimport styled from 'styled-components';\nimport React, { useMemo, useState } from 'react';\nimport { useOverlayService } from '../../../../Providers/Overlay/OverlayStackProvider';\nimport { useOrdersSelector } from '../../../../redux/selectors.store';\nimport TabSelector from '../../../atoms/TabSelector';\nimport { OverviewTextArea } from 'components/Overviews/components/OverviewTextArea';\nimport { OverviewCellProps } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { t } from '../../../../i18e';\nimport { _enumToTabs } from '../../../../utils';\nimport { OrderOverviewTotals } from '../compnents/OrderOverviewTotals';\nimport { PartialRecord } from '../../../../types/utils.types';\nimport { OrderOverviewCustomerInfo } from '../compnents/OrderOverviewCustomerInfo';\nimport { OrderOverviewInvoicing } from '../compnents/OrderOverviewInvoicing';\nimport { OrderOverviewDelivery } from '../compnents/OrderOverviewDelivery';\nimport { OrderOverviewTabProps } from './types';\n\nexport interface OrderOverviewInfoTabProps extends OrderOverviewTabProps {}\n\nenum OrderOverviewInfoTabsEnum {\n  General = 'General',\n  Customer = 'Customer',\n  Invoicing = 'Invoicing',\n  Delivery = 'Delivery',\n  Additional = 'Additional',\n}\n\nconst orderOverviewInfoTabs = _enumToTabs(OrderOverviewInfoTabsEnum);\n\nconst OrderOverviewInfoTab: React.FC<OrderOverviewInfoTabProps> = _p => {\n  const overlayS = useOverlayService();\n  const currentOrder = useOrdersSelector().currentOrder;\n  const [currentTab, setCurrentTab] = useState<OrderOverviewInfoTabsEnum>(OrderOverviewInfoTabsEnum.General);\n  const cellsMap = getOrderOverviewCellsMap();\n\n  const renderCells = useMemo(\n    () =>\n      !cellsMap[currentTab]\n        ? null\n        : cellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n            if (CellComponent) {\n              return <CellComponent key={cell.title} overlayHandler={overlayS.open} cell={cell} data={currentOrder} />;\n            }\n            return <OverviewTextArea key={cell.title} overlayHandler={overlayS.open} cell={cell} data={currentOrder} />;\n          }),\n    [cellsMap, currentTab, overlayS.open, currentOrder]\n  );\n\n  return (\n    <Box fillWidth flex={1} overflow={'auto'}>\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        options={orderOverviewInfoTabs}\n        onOptSelect={option => {\n          option?.value && setCurrentTab(option?.value);\n        }}\n      />\n\n      <FlexBox overflow={'hidden'}>\n        <FlexBox overflow={'auto'}>{renderCells}</FlexBox>\n      </FlexBox>\n    </Box>\n  );\n};\n\nconst Box = styled(FlexBox)``;\nexport default OrderOverviewInfoTab;\n\nconst orderOverviewCells: OverviewCellProps<OrderEntity>[] = [\n  {\n    title: t('Manager'),\n    getValue: data => data?.manager?.user?.email,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    title: t('Reference'),\n    getValue: data => data?.reference?.internal,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Group reference'),\n    getValue: data => data?.group?.reference?.internal,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    title: t('Group strategy'),\n    getValue: data => data?.group?.strategy,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Totals'),\n    CellComponent: OrderOverviewTotals,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Status'),\n    getValue: data => data?.status,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    CellComponent: OrderOverviewCustomerInfo,\n    tab: OrderOverviewInfoTabsEnum.Customer,\n  },\n  {\n    title: t('Receiver'),\n    CellComponent: OrderOverviewCustomerInfo,\n    tab: OrderOverviewInfoTabsEnum.Delivery,\n  },\n  {\n    title: t('Invoicing'),\n    CellComponent: OrderOverviewInvoicing,\n    tab: OrderOverviewInfoTabsEnum.Invoicing,\n  },\n  { title: t('Delivery'), CellComponent: OrderOverviewDelivery, tab: OrderOverviewInfoTabsEnum.Delivery },\n  { title: t('Additional'), tab: OrderOverviewInfoTabsEnum.Additional },\n];\n\nfunction getOrderOverviewCellsMap(): PartialRecord<\n  OrderOverviewInfoTabsEnum | string,\n  OverviewCellProps<OrderEntity, OrderOverviewInfoTabsEnum>[]\n> {\n  const orderOverviewCellsMap: PartialRecord<\n    OrderOverviewInfoTabsEnum | string,\n    OverviewCellProps<OrderEntity, OrderOverviewInfoTabsEnum>[]\n  > = {};\n  orderOverviewCells.forEach(item => {\n    const tab = item.tab;\n\n    if (tab) {\n      if (orderOverviewCellsMap[tab]) {\n        orderOverviewCellsMap[tab]?.push(item);\n      } else {\n        orderOverviewCellsMap[tab] = [item];\n      }\n    }\n  });\n  return orderOverviewCellsMap;\n}\n","import { RenderOverviewAreaComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { AreaStyledComp } from '../../components/CellStyles';\nimport { OverviewAreaHeader } from '../../components/OverviewAreaHeader';\nimport { t } from '../../../../i18e';\nimport { useMemo } from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { numberWithSpaces } from '../../../../utils';\nimport { Text } from '../../../atoms/Text';\n\nexport const OrderOverviewTotals: RenderOverviewAreaComponent<OrderEntity> = ({ data, cell }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Amount'), value: numberWithSpaces(data?.total?.amount) },\n      { label: t('Items count'), value: data?.total?.items },\n    ];\n    return cells.map(cell => (\n      <FlexBox fxDirection={'row'} padding={'6px'} justifyContent={'space-between'} fillWidth gap={8}>\n        <Text $size={11}>{cell.label}</Text>\n        <AreaStyledComp.CellText $weight={600}>{cell?.value}</AreaStyledComp.CellText>\n      </FlexBox>\n    ));\n  }, [data?.total?.amount, data?.total?.items]);\n\n  return (\n    <AreaStyledComp.Cell>\n      <OverviewAreaHeader title={cell.title} />\n\n      {renderCells}\n    </AreaStyledComp.Cell>\n  );\n};\n","import { RenderOverviewAreaComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { AreaStyledComp } from '../../components/CellStyles';\nimport { useMemo } from 'react';\nimport { t } from '../../../../i18e';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { OverviewAreaHeader } from '../../components/OverviewAreaHeader';\n\nexport const OrderOverviewInvoicing: RenderOverviewAreaComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Count'), value: data?.deliveries?.length },\n    ];\n    return cells.map(cell => {\n      return (\n        <FlexBox\n          key={cell.label}\n          fxDirection={'row'}\n          padding={'6px'}\n          gap={8}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $size={11}>{cell?.label}</Text>\n          <Text $size={13} $weight={500}>\n            {cell?.value ?? t('undefined')}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.deliveries?.length]);\n\n  return (\n    <AreaStyledComp.Cell>\n      <OverviewAreaHeader title={t('General info')} />\n      {renderCells}\n    </AreaStyledComp.Cell>\n  );\n};\n","import { RenderOverviewAreaComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { AreaStyledComp } from '../../components/CellStyles';\nimport { t } from '../../../../i18e';\nimport { useMemo } from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { OverviewAreaHeader } from '../../components/OverviewAreaHeader';\n\nexport const OrderOverviewDelivery: RenderOverviewAreaComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Count'), value: data?.deliveries?.length },\n    ];\n    return cells.map(cell => {\n      return (\n        <FlexBox\n          key={cell.label}\n          fxDirection={'row'}\n          padding={'6px'}\n          gap={8}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $size={11}>{cell?.label}</Text>\n          <Text $size={13} $weight={500}>\n            {cell?.value ?? t('undefined')}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.deliveries?.length]);\n\n  return (\n    <AreaStyledComp.Cell>\n      <OverviewAreaHeader title={t('General info')} />\n\n      {renderCells}\n    </AreaStyledComp.Cell>\n  );\n};\n","import React, { createContext, useContext, useEffect, useMemo } from 'react';\nimport { useOrdersSelector } from '../redux/selectors.store';\nimport { OrderEntity } from '../types/orders/orders.types';\nimport { ServiceName, useAppServiceProvider } from '../hooks/useAppServices.hook';\nimport { useAppParams } from '../hooks';\nimport { useAppDispatch } from '../redux/store.store';\nimport {\n  getAllDeliveriesByOrderThunk,\n  getAllInvoicesByOrderThunk,\n  getAllPaymentsByOrderThunk,\n  getOrderSlotsThunk,\n} from '../redux/orders/orders.thunks';\nimport { __ServiceDispatcherAsync } from '../redux/app-redux.types';\n\nexport interface PageCurrentOrderProviderProps {\n  children?: React.ReactNode;\n}\n\nexport type OrderProviderValue = Partial<OrderEntity> & {\n  _origin?: OrderEntity;\n  getSlots: __ServiceDispatcherAsync<typeof getOrderSlotsThunk>;\n  getPayments: __ServiceDispatcherAsync<typeof getAllPaymentsByOrderThunk>;\n  getInvoices: __ServiceDispatcherAsync<typeof getAllInvoicesByOrderThunk>;\n  getDeliveries: __ServiceDispatcherAsync<typeof getAllDeliveriesByOrderThunk>;\n};\n\nexport const CurrentOrderCTX = createContext({});\n\nexport const useCurrentOrder = () => useContext(CurrentOrderCTX) as OrderProviderValue;\n\nconst CurrentOrderProvider: React.FC<PageCurrentOrderProviderProps> = ({ children }) => {\n  const params = useAppParams();\n  const orderId = useAppParams()?.orderId;\n  const { currentOrder } = useOrdersSelector();\n\n  const dispatch = useAppDispatch();\n  const service = useAppServiceProvider()[ServiceName.orders];\n\n  const CTX = useMemo((): OrderProviderValue => {\n    return {\n      ...currentOrder,\n      _origin: currentOrder,\n      getSlots: async args => {\n        return !orderId ? undefined : dispatch(getOrderSlotsThunk({ ...args, data: { params: { orderId } } }));\n      },\n      getPayments: async args => {\n        return !orderId ? undefined : dispatch(getAllPaymentsByOrderThunk({ ...args, data: { params: { orderId } } }));\n      },\n      getInvoices: async args => {\n        return !orderId ? undefined : dispatch(getAllInvoicesByOrderThunk({ ...args, data: { params: { orderId } } }));\n      },\n      getDeliveries: async args => {\n        return !orderId\n          ? undefined\n          : dispatch(getAllDeliveriesByOrderThunk({ ...args, data: { params: { orderId } } }));\n      },\n    };\n  }, [currentOrder, dispatch, orderId]);\n\n  useEffect(() => {\n    if (!currentOrder || (orderId && orderId !== currentOrder._id)) {\n      params.orderId && service.getById({ data: { params: { _id: orderId } } });\n    }\n  }, [currentOrder, orderId, params.orderId, service]);\n\n  return <CurrentOrderCTX.Provider value={CTX ?? {}}>{children}</CurrentOrderCTX.Provider>;\n};\nexport default CurrentOrderProvider;\n","import React, { useCallback, useEffect } from 'react';\nimport { wsConnectionStatusAction, WsTypeEnum } from 'redux/chat/chat.slice';\nimport { useAppDispatch } from 'redux/store.store';\nimport { ChatWs, WsChat } from 'socket';\nimport { ChatMessagesApiTypes } from '../../api';\nimport { ChatEntity } from '../../types/chat/chat.types';\nimport { AnyFn } from '../../utils/types';\n\nexport interface ChatWsInitializerMethods {\n  loadMessages: (params: ChatMessagesApiTypes.FindAllQuery) => void;\n  chat?: ChatEntity;\n}\n\n// type TypingsMap = Record<\n//   UUID,\n//   {\n//     email?: string;\n//     name?: string;\n//   }\n// >;\n\nexport const ChatWsInitializer = React.forwardRef(\n  (\n    {\n      permissionId,\n      onConnect,\n      onConnectError,\n      onJoin,\n      onLeave,\n      onTyping,\n      chatId,\n      orderId,\n      onSend,\n    }: {\n      chatId?: string;\n      orderId?: string;\n      permissionId?: string;\n      onConnect?: () => void;\n      onConnectError?: (arror: any) => void;\n      onJoin?: WsChat.ListenersMap[WsChat.EventNames.joinedToRoom];\n      onLeave?: WsChat.ListenersMap[WsChat.EventNames.leavedRoom];\n      onTyping?: WsChat.ListenersMap[WsChat.EventNames.messages_typing];\n      onSend?: WsChat.ListenersMap[WsChat.EventNames.messages_send];\n    },\n    ref?: React.ForwardedRef<ChatWsInitializerMethods>\n  ) => {\n    const dispatch = useAppDispatch();\n    const handleConnected = useCallback(() => {\n      if (chatId) {\n        ChatWs.handleJoin({ data: { chatId } });\n      }\n\n      dispatch(\n        wsConnectionStatusAction({\n          type: WsTypeEnum.chat,\n          status: true,\n        })\n      );\n    }, [chatId, dispatch]);\n\n    const handleDisconnect = useCallback(() => {\n      dispatch(\n        wsConnectionStatusAction({\n          type: WsTypeEnum.chat,\n          status: false,\n        })\n      );\n    }, [dispatch]);\n    useEffect(() => {\n      const socket = ChatWs.socketRef;\n      const connection = socket?.connection;\n\n      if (!connection) {\n        handleDisconnect();\n        return;\n      }\n\n      const unsubscribers: AnyFn[] = [];\n\n      if (!connection?.active) {\n        socket?.connect();\n      } else if (connection.active) {\n        handleConnected();\n      }\n      unsubscribers.push(\n        socket?.onConnect(() => {\n          onConnect && onConnect();\n          handleConnected();\n        })\n      );\n\n      if (onConnectError) {\n        unsubscribers.push(\n          socket.onConnectError(error => {\n            onConnectError && onConnectError(error);\n\n            handleDisconnect();\n          })\n        );\n      }\n      if (onTyping) {\n        unsubscribers.push(ChatWs.onTyping.onSuccess(onTyping));\n      }\n      if (onJoin) {\n        unsubscribers.push(ChatWs.onJoin.onSuccess(onJoin));\n      }\n      if (onLeave) {\n        unsubscribers.push(ChatWs.onLeave.onSuccess(onLeave));\n      }\n      if (onSend) {\n        unsubscribers.push(ChatWs.onSend.onSuccess(onSend));\n      }\n\n      return () => {\n        unsubscribers.forEach(clb => clb());\n      };\n    }, [\n      chatId,\n      dispatch,\n      handleConnected,\n      handleDisconnect,\n      onConnect,\n      onConnectError,\n      onJoin,\n      onLeave,\n      onSend,\n      onTyping,\n    ]);\n\n    return null;\n  }\n);\n\n// export const ChatWsInitializer = ({\n//   onConnect,\n//   onConnectError,\n// }: {\n//   onConnect?: () => void;\n//   onConnectError?: (error: Error) => void;\n// }) => {\n//   const dispatch = useAppDispatch();\n//   // const authState=useAuthSelector()\n//\n//   useEffect(() => {\n//     const socket = ChatWs.socketRef;\n//     const connection = socket?.connection;\n//\n//     if (!connection) {\n//       dispatch(\n//         wsConnectionStatusAction({\n//           status: false,\n//         })\n//       );\n//     } else if (!connection?.active) {\n//       const unsubscribers = [\n//         socket?.onConnect(() => {\n//           console.log('Chat connected');\n//           onConnect && onConnect();\n//           dispatch(\n//             wsConnectionStatusAction({\n//               status: true,\n//             })\n//           );\n//         }),\n//         socket.onConnectError(error => {\n//           console.error('Chat connect error');\n//           console.error(error);\n//           onConnectError && onConnectError(error);\n//         }),\n//       ];\n//\n//       socket?.connect();\n//       return () => {\n//         unsubscribers.forEach(clb => clb());\n//       };\n//     } else {\n//       connection.active &&\n//         dispatch(\n//           wsConnectionStatusAction({\n//             status: true,\n//           })\n//         );\n//     }\n//   }, [dispatch, onConnect, onConnectError]);\n//\n//   return null;\n// };\n","import { format } from 'date-fns';\nimport { styled } from 'styled-components';\nimport React from 'react';\nimport { Text } from '../../atoms/Text';\nimport FlexBox from 'components/atoms/FlexBox';\nimport { MessageEntity } from 'types/chat/chat-messages.type';\nimport { uk } from 'date-fns/locale';\n\nexport const ChatMessage = ({ msg, isRequest }: { msg: MessageEntity; isRequest?: boolean }) => {\n  return (\n    <MessageBox\n      key={msg._id}\n      padding={'8px'}\n      gap={12}\n      maxWidth={'80%'}\n      alignSelf={isRequest ? 'flex-end' : 'flex-start'}\n      $isRequest={isRequest}\n    >\n      <Text $align={'left'} $lineHeight={1.55} $weight={500}>\n        {msg.text}\n      </Text>\n\n      <Text $align={isRequest ? 'right' : 'left'} $weight={500} $size={10}>\n        {msg.createdAt ? format(new Date(msg.createdAt), 'dd.MM.yy hh:mm', { locale: uk }) : ''}\n      </Text>\n    </MessageBox>\n  );\n};\n\nconst MessageBox = styled(FlexBox)<{ $isRequest?: boolean }>`\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React, { useEffect, useRef } from 'react';\nimport { useAppDispatch } from '../../../redux/store.store';\nimport { FlexForm } from '../../atoms/FlexBox';\nimport InputText from '../../atoms/Inputs/InputText';\nimport { ChatWs } from '../../../socket';\nimport ButtonIcon from '../../atoms/ButtonIcon';\nimport { YUP } from 'schemas';\nimport { sendChatMessageThunk } from '../../../redux/chat/chat.thunks';\n\ninterface ChatFormData {\n  chatId: string;\n  text: string;\n}\n\nconst validation = YUP.object().shape({\n  text: YUP.string().required(),\n  chatId: YUP.string().uuid().required(),\n});\nconst ChatForm = ({ chatId, onSubmit }: { chatId?: string; onSubmit?: (data: ChatFormData) => void }) => {\n  const { watch, resetField, register, setValue, handleSubmit } = useForm<ChatFormData>({\n    defaultValues: { chatId },\n    resolver: yupResolver(validation),\n    reValidateMode: 'onSubmit',\n  });\n  // const typingTimeoutRef = useRef<NodeJS.Timeout>();\n  const typingRef = useRef<boolean>();\n  const dispatch = useAppDispatch();\n  const formValues = watch();\n\n  // const setTyping = () => {\n  //   clearTimeout(typingTimeoutRef.current);\n  //   typingTimeoutRef.current = undefined;\n  //   typingTimeoutRef.current = setTimeout(() => {\n  //     ChatWs.handleTyping({\n  //       data: { status: false, chatId: chatId ?? '' },\n  //     });\n  //\n  //     typingTimeoutRef.current = undefined;\n  //   }, 2000);\n  // };\n\n  useEffect(() => {\n    if (chatId) {\n      setValue('chatId', chatId);\n    }\n  }, [chatId, setValue]);\n\n  return (\n    <FlexForm\n      padding={'8px 8px 16px'}\n      fxDirection={'row'}\n      gap={12}\n      alignItems={'center'}\n      onSubmit={handleSubmit(fData => {\n        dispatch(\n          sendChatMessageThunk({\n            data: {\n              data: { data: fData },\n            },\n            onSuccess: () => {\n              resetField('text');\n            },\n          })\n        );\n      })}\n    >\n      <InputText\n        $height={'100%'}\n        {...register('text', {\n          required: true,\n          onChange: () => {\n            if (!typingRef.current) {\n              typingRef.current = true;\n              ChatWs.handleTyping({\n                data: { status: true, chatId: chatId ?? '' },\n              });\n            }\n          },\n          onBlur: () => {\n            typingRef.current = false;\n            ChatWs.handleTyping({\n              data: { status: false, chatId: chatId ?? '' },\n            });\n          },\n        })}\n      ></InputText>\n\n      <ButtonIcon type={'submit'} disabled={!formValues.text} variant={'filled'} sizeType={'middle'}>\n        {'Send'}\n      </ButtonIcon>\n    </FlexForm>\n  );\n};\n\nexport default ChatForm;\n","import FlexBox from '../atoms/FlexBox';\nimport { ChatWsInitializer } from '../Ws/ChatWsInitializer';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useChatSelector } from '../../redux/selectors.store';\nimport { useAppDispatch } from '../../redux/store.store';\nimport { createChatThunk, getChatMessagesThunk, getChatThunk } from '../../redux/chat/chat.thunks';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\n\nimport { AxiosError, HttpStatusCode } from 'axios';\nimport styled from 'styled-components';\nimport { ChatEntity } from '../../types/chat/chat.types';\nimport { ToastService } from '../../services';\nimport { addChatMessageAction } from 'redux/chat/chat.slice';\nimport { omit } from 'lodash';\nimport { UUID } from '../../types/utils.types';\nimport { ChatMessage } from './components/ChatMessage';\nimport ChatForm from './components/ChatForm';\nimport { ChatApiTypes, ChatMessagesApiTypes } from '../../api';\nimport { useAppParams } from '../../hooks';\n\ntype TypingsMap = Record<\n  UUID,\n  {\n    email?: string;\n    name?: string;\n  }\n>;\n\nexport const Chat = ({ orderId, chatId }: { orderId?: string; chatId?: string }) => {\n  const chatState = useChatSelector();\n  const dispatch = useAppDispatch();\n  const permissionId = useAppParams().permissionId;\n\n  const loaders = useLoaders<'send' | 'wait' | 'getAll' | 'messages' | 'chat'>();\n\n  const [chat, setChat] = useState<ChatEntity | undefined>(() => {\n    const id = chatId || (orderId ? chatState.keysMap[orderId] : undefined);\n\n    return id ? chatState.dataMap[id] : undefined;\n  });\n\n  const [isTypingMap, setIsTypingMap] = useState<TypingsMap>({});\n\n  const isConnected = chatState.wsConnectionStatus;\n\n  const setTyping = (data: typeof isTypingMap) => {\n    setIsTypingMap(prev => ({ ...prev, ...data }));\n  };\n  const unSetTyping = (key: string) => {\n    setIsTypingMap(prev => omit(prev, [key]));\n  };\n\n  const createChat = (params: { orderId: string }) => {\n    dispatch(\n      createChatThunk({\n        params,\n        onLoading: loaders.onLoading('chat'),\n        onSuccess: ({ data }) => {\n          setChat(data);\n          loadMessages({ chatId: data._id });\n        },\n      })\n    );\n  };\n  const loadMessages = (params: ChatMessagesApiTypes.FindAllQuery) => {\n    dispatch(\n      getChatMessagesThunk({\n        params,\n        onLoading: loaders.onLoading('messages'),\n      })\n    );\n  };\n  const getChat = (params: ChatApiTypes.FindOneQuery) => {\n    dispatch(\n      getChatThunk({\n        params,\n        onLoading: loaders.onLoading('chat'),\n        onSuccess: ({ data }) => {\n          setChat(data);\n          loadMessages({ chatId: data._id });\n        },\n        onError: (err: AxiosError) => {\n          if (err.response?.status === HttpStatusCode.NotFound) {\n            params.orderId && createChat({ orderId: params.orderId });\n          }\n        },\n      })\n    );\n  };\n  const renderTypings = useMemo(() => {\n    const list = Object.entries(isTypingMap);\n\n    return list.map(([key, item]) => {\n      return (\n        <FlexBox $padding={'8px'} key={key}>\n          {item?.email || item?.name}\n        </FlexBox>\n      );\n    });\n  }, [isTypingMap]);\n\n  const messagesList = useMemo(() => {\n    const mapKey = chat?._id;\n\n    if (!mapKey) return null;\n\n    return chatState.messages.listsMap[mapKey];\n  }, [chat?._id, chatState.messages.listsMap]);\n\n  const renderMessages = useMemo(() => {\n    return messagesList?.map(msg => {\n      const isRequest = !!msg.sender?.user;\n\n      return <ChatMessage key={msg._id} msg={msg} isRequest={isRequest} />;\n    });\n  }, [messagesList]);\n\n  useEffect(() => {\n    if (chatId) {\n      const chat = chatState.dataMap[chatId];\n      if (!chat) {\n        getChat({ _id: chatId });\n      } else {\n        setChat(chat);\n        loadMessages({ chatId });\n      }\n    } else if (orderId) {\n      getChat({ orderId });\n    }\n    // eslint-disable-next-line\n  }, [chatId, orderId]);\n\n  return (\n    <FlexBox overflow={'hidden'} flex={1}>\n      <ChatWsInitializer\n        // permissionId={profile?.permission?._id}\n        chatId={chat?._id}\n        onTyping={data => {\n          if (data.data.member) {\n            if (data.data.status) {\n              setTyping({ [data.data.member?._id]: { email: 'email' } });\n            } else {\n              unSetTyping(data.data.member?._id);\n            }\n          }\n        }}\n        onJoin={data => {\n          if (data.data.member?._id !== permissionId) {\n            ToastService.info(\n              `${\n                data.data?.member?.user?.email ||\n                data.data?.member?.customer?.email ||\n                data.data?.member?.integration?.label\n              } joined to chat`\n            );\n          }\n        }}\n        onLeave={data => {\n          if (data.data.member?._id !== permissionId) {\n            ToastService.info(\n              `${\n                data.data?.member?.user?.email ||\n                data.data?.member?.customer?.email ||\n                data.data?.member?.integration?.label\n              } leaved to chat`\n            );\n          }\n        }}\n        onSend={data => {\n          if (data.data?.member?._id === permissionId) {\n            console.log({ permissionId, data });\n            return;\n          }\n          const chatId = data.data.chat?._id;\n          chatId && dispatch(addChatMessageAction({ chatId, data: data.data }));\n        }}\n      />\n\n      <MessagesList>{renderMessages}</MessagesList>\n\n      {!!renderTypings?.length && (\n        <FlexBox gap={12} padding={'8px 16px'}>\n          {renderTypings}\n        </FlexBox>\n      )}\n\n      {!isConnected && <FlexBox padding={'16px'}>{'Is not connected'}</FlexBox>}\n\n      <ChatForm chatId={chat?._id}></ChatForm>\n    </FlexBox>\n  );\n};\n\nconst MessagesList = styled(FlexBox)`\n  flex-direction: column-reverse;\n  gap: 8px;\n  padding: 8px;\n\n  flex: 1;\n  overflow: auto;\n`;\n\nexport default Chat;\n","import Chat from '../../../Chat/Chat';\nimport { OrderOverviewTabProps } from './types';\nimport React from 'react';\n\nexport const OrderChatTab = ({ order }: OrderOverviewTabProps) => {\n  return <Chat orderId={order?._id}></Chat>;\n};\n","import { OrderEntity } from '../../../types/orders/orders.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { ModalHeader } from '../../atoms';\nimport React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../atoms/ButtonIcon';\nimport { t } from '../../../i18e';\nimport { useAppRouter } from '../../../hooks';\nimport { enumToFilterOptions } from '../../../utils';\nimport TabSelector from '../../atoms/TabSelector';\nimport OrderOverviewInfoTab from './tabs/OrderOverviewInfoTab';\nimport { useCurrentOrder } from '../../../Providers/CurrentOrderProvider';\nimport { OrderChatTab } from './tabs/OrderChatTab';\n\nexport interface OrderOverviewXLProps {\n  order?: OrderEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  isRefresh?: boolean;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\nexport enum OrderOverviewTabs {\n  Info = 'Info',\n  Chat = 'Chat',\n  Statuses = 'Statuses',\n  Tasks = 'Tasks',\n}\n\nconst tabs = enumToFilterOptions(OrderOverviewTabs);\n\nconst OrderOverviewXL: React.FC<OrderOverviewXLProps> = p => {\n  const [currentTab, setCurrentTab] = useState<number>(0);\n  // const orderS = useAppServiceProvider()[ServiceName.orders];\n  // const orderId = useAppParams()?.orderId;\n  const Order = useCurrentOrder();\n  const router = useAppRouter();\n\n  const renderTab = useMemo(() => {\n    if (tabs[currentTab].value === OrderOverviewTabs.Info) {\n      return <OrderOverviewInfoTab order={Order._origin} />;\n    }\n    if (tabs[currentTab].value === OrderOverviewTabs.Chat) {\n      return <OrderChatTab order={Order._origin} />;\n    }\n\n    return null;\n  }, [Order._origin, currentTab]);\n\n  return (\n    <Container flex={1} fillWidth padding={'0 8px'}>\n      <ModalHeader\n        title={t('Order overview')}\n        onBackPress={() => {\n          router.goBack();\n        }}\n      />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <TabSelector\n          options={tabs}\n          optionProps={{ fitContentH: true }}\n          onOptSelect={(_o, _v, i) => typeof i === 'number' && setCurrentTab(i)}\n        />\n\n        <FlexBox flex={1} overflow={'hidden'}>\n          {renderTab}\n        </FlexBox>\n\n        {![OrderOverviewTabs.Chat].includes(tabs[currentTab].value) && <OverviewFooter />}\n      </Content>\n    </Container>\n  );\n};\nconst OverviewFooter = (p: OrderOverviewXLProps) => {\n  return (\n    <Footer fxDirection={'row'} alignItems={'center'} justifyContent={'space-between'} padding={'8px 0'}>\n      <ButtonIcon\n        size={'36px'}\n        variant={'onlyIcon'}\n        iconSize={'85%'}\n        icon={'edit'}\n        disabled={!p?.onEdit}\n        onClick={p?.onEdit}\n      />\n\n      <DeleteBtn\n        variant={'onlyIcon'}\n        size={'36px'}\n        iconSize={'85%'}\n        icon={'delete'}\n        disabled={!p?.onDelete}\n        onClick={p?.onDelete}\n      />\n\n      <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'refresh'}\n          isLoading={p?.isRefresh}\n          disabled={!p?.onRefresh}\n          onClick={p?.onRefresh}\n        />\n\n        <OpenBtn\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'SmallArrowLeft'}\n          disabled={!p?.onOpenRightSide}\n          onClick={p?.onOpenRightSide}\n        />\n      </FlexBox>\n    </Footer>\n  );\n};\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nexport default OrderOverviewXL;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { useState } from 'react';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OrderOverviewXL from 'components/Overviews/order/OrderOverviewXL';\n\nexport interface PageOrderOverviewLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\nconst PageOrderOverviewLeftSide: React.FC<PageOrderOverviewLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const { currentOrder } = useOrdersSelector();\n  const setLoading = useState(false)[1];\n  const { orders: ordersServ } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OrderOverviewXL\n        order={currentOrder}\n        onRefresh={() => {\n          currentOrder?._id &&\n            ordersServ.getById({\n              data: { _id: currentOrder?._id, options: { refreshCurrent: true } },\n              onLoading: setLoading,\n            });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default PageOrderOverviewLeftSide;\n","import FlexBox from '../../../atoms/FlexBox';\nimport TabSelector from '../../../atoms/TabSelector';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useEffect, useMemo, useState } from 'react';\nimport { orderSlotsTableColumns } from '../../../../data';\nimport { offerTypeFilterOptions } from '../../../../data/modalFilterOptions.data';\nimport { useLoaders } from '../../../../Providers/Loaders/useLoaders.hook';\nimport { OfferTypeEnum } from '../../../../types/offers/offers.types';\nimport { useCurrentOrder } from '../../../../Providers/CurrentOrderProvider';\nimport { OrderSlotEntity } from '../../../../types/orders/order-slot.types';\n\nexport interface OrderContentTabProps {}\n\nexport const OrderContentTab: React.FC<OrderContentTabProps> = p => {\n  // const service = useAppServiceProvider()[AppModuleName.orders];\n  const [currentTab, setCurrentTab] = useState<OfferTypeEnum | undefined>();\n  const loaders = useLoaders<'update' | 'create' | 'refresh'>();\n  const Order = useCurrentOrder();\n\n  // const { currentOrder } = useOrdersSelector();\n\n  const tableData = useMemo(() => {\n    // const grouped=groupBy(currentOrder?.slots)\n\n    if (currentTab) {\n      return Order?.slots?.filter(el => el.offer?.type === currentTab);\n    } else return Order?.slots;\n  }, [Order?.slots, currentTab]);\n\n  const tableConfigs = useMemo((): ITableListProps<OrderSlotEntity> => {\n    return {\n      actionsCreator: _ctx => {\n        return [\n          {\n            icon: 'refresh',\n            name: 'refresh',\n            disabled: !Order._id,\n            onClick: () => {\n              Order.getSlots({ onLoading: loaders.onLoading('refresh') });\n            },\n          },\n        ];\n      },\n    };\n  }, [Order, loaders]);\n\n  useEffect(() => {\n    if (!Order?.slots?.length) {\n      Order.getSlots({ onLoading: loaders.onLoading('refresh') });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <FlexBox fillWidth overflow={'hidden'} flex={1}>\n      <FlexBox fillWidth>\n        <TabSelector\n          options={offerTypeFilterOptions}\n          defaultValue={currentTab}\n          preventDefault\n          onResetPress={() => {\n            setCurrentTab(undefined);\n          }}\n          onOptSelect={(_o, value) => {\n            setCurrentTab(value);\n          }}\n        />\n      </FlexBox>\n\n      <TableList\n        hasSearch={false}\n        hasFilter={false}\n        {...tableConfigs}\n        tableData={tableData}\n        isLoading={loaders.isLoading.refresh}\n        tableTitles={orderSlotsTableColumns}\n      />\n    </FlexBox>\n  );\n};\n\nexport default OrderContentTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { invoicesTableColumns } from '../../../../data/invoicing.data';\nimport { useEffect, useMemo } from 'react';\nimport { IInvoice } from '../../../../types/invoices.types';\nimport { OrderTabProps } from './orderTabs.types';\nimport { useCurrentOrder } from '../../../../Providers/CurrentOrderProvider';\nimport { useLoaders } from '../../../../Providers/Loaders/useLoaders.hook';\n\nexport interface OrderInvoicesTabProps extends OrderTabProps {}\n\nconst OrderInvoicesTab: React.FC<OrderInvoicesTabProps> = _p => {\n  // const state = useOrdersSelector();\n  // const service = useAppServiceProvider().get(AppModuleName.orders);\n\n  const Order = useCurrentOrder();\n\n  // const modalService = useModalService();\n  const loaders = useLoaders<'refresh'>();\n\n  const tableConfigs = useMemo((): ITableListProps<IInvoice> => {\n    return {\n      actionsCreator: ctx => {\n        return [\n          {\n            name: 'refresh',\n            icon: 'refresh',\n            disabled: !Order._id,\n            onClick: () => {\n              Order.getInvoices({});\n            },\n          },\n        ];\n      },\n    };\n  }, [Order]);\n\n  useEffect(() => {\n    if (Order?._id) {\n      Order.getInvoices({ onLoading: loaders.onLoading('refresh') });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfigs}\n      hasSearch={false}\n      hasFilter={false}\n      isLoading={loaders.isLoading.refresh}\n      tableData={Order?.invoices}\n      tableTitles={invoicesTableColumns}\n    />\n  );\n};\n\nexport default OrderInvoicesTab;\n","import TableList from '../../../TableList/TableList';\n\nexport interface OrderPaymentsTabProps {}\n\nconst OrderPaymentsTab: React.FC<OrderPaymentsTabProps> = () => {\n  return <TableList hasSearch={false} hasFilter={false} />;\n};\n\nexport default OrderPaymentsTab;\n","import TableList from '../../../TableList/TableList';\nimport { OrderTabProps } from './orderTabs.types';\nimport { useEffect } from 'react';\nimport { useCurrentOrder } from '../../../../Providers/CurrentOrderProvider';\n\nexport interface OrderDeliveriesTabProps extends OrderTabProps {}\n\nconst OrderDeliveriesTab: React.FC<OrderDeliveriesTabProps> = ({ order }) => {\n  const Order = useCurrentOrder();\n\n  useEffect(() => {\n    if (!Order?.deliveries?.length) {\n      Order?.getDeliveries({});\n    }\n  }, [Order]);\n\n  return (\n    <TableList\n      hasSearch={false}\n      hasFilter={false}\n      actionsCreator={() => {\n        return [{ title: 'Refresh', icon: 'refresh', onClick: () => Order.getDeliveries({}) }];\n      }}\n    />\n  );\n};\n\nexport default OrderDeliveriesTab;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport OrderContentTab from './tabs/OrderContentTab';\nimport OrderInvoicesTab from './tabs/OrderInvoicesTab';\nimport OrderPaymentsTab from './tabs/OrderPaymentsTab';\nimport OrderDeliveriesTab from './tabs/OrderDeliveriesTab';\nimport { DrawerHeader } from '../../Overlays';\nimport { t } from '../../../i18e';\n\nexport interface PageOrderOverviewTabsProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\nenum OrderTabNameEnum {\n  Content = 'Content',\n  Invoices = 'Invoices',\n  Payments = 'Payments',\n  Deliveries = 'Deliveries',\n  // Shipments = 'Shipments',\n}\nconst toggleOptions = enumToFilterOptions(OrderTabNameEnum);\nconst PageOrderOverviewTabs = ({ toggleVisibility, isVisible }: PageOrderOverviewTabsProps) => {\n  // const orderId = useAppParams()?.orderId;\n\n  const { currentOrder } = useOrdersSelector();\n  // const service = useAppServiceProvider()[ServiceName.orders];\n  const [current, setCurrent] = useState<OrderTabNameEnum>(OrderTabNameEnum.Content);\n\n  const renderTab = useMemo(() => {\n    if (current === OrderTabNameEnum.Content) {\n      return <OrderContentTab />;\n    }\n    if (current === OrderTabNameEnum.Invoices) {\n      return <OrderInvoicesTab />;\n    }\n    if (current === OrderTabNameEnum.Payments) {\n      return <OrderPaymentsTab />;\n    }\n    if (current === OrderTabNameEnum.Deliveries) {\n      return <OrderDeliveriesTab />;\n    }\n  }, [current]);\n\n  const filterHandler: FilterSelectHandler<OrderTabNameEnum> = (_, value, index) => {\n    value && setCurrent(value);\n  };\n\n  return (\n    <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n      {isVisible && (\n        <DrawerHeader title={currentOrder?.reference?.internal ?? t('undefined')} onBackPress={toggleVisibility} />\n      )}\n\n      <FlexBox>\n        <TabSelector options={toggleOptions} defaultValue={current} onOptSelect={filterHandler} preventDefault />\n      </FlexBox>\n\n      <FlexBox overflow={'hidden'} flex={1}>\n        {renderTab}\n      </FlexBox>\n    </RightSide>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: ${p => (p.isVisible ? '0 12px 26px rgba(0, 0, 0, 0.25)' : '')};\n  }\n`;\n\nexport default PageOrderOverviewTabs;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport { AppGridPage } from '../pages';\nimport { useAppParams } from '../../../hooks';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\nimport PageOrderOverviewLeftSide from './PageOrderOverviewLeftSide';\nimport PageOrderOverviewTabs from './PageOrderOverviewTabs';\nimport { BaseAppPageProps } from '../index';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { AppModuleName } from '../../../redux/reduxTypes.types';\nimport CurrentOrderProvider from '../../../Providers/CurrentOrderProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nconst PageOrderOverview: React.FC<Props> = ({ path }) => {\n  const service = useAppServiceProvider()[AppModuleName.orders];\n\n  const [isTabsSideVisible, setIsTabsSideVisible] = useState<boolean>(false);\n  const { orderId } = useAppParams();\n\n  const toggleRightSide = () => {\n    setIsTabsSideVisible(p => !p);\n  };\n\n  useEffect(() => {\n    if (orderId) {\n      service.getById({\n        data: { _id: orderId, options: { refreshCurrent: true } },\n      });\n    }\n  }, [orderId, service]);\n\n  return (\n    <AppGridPage path={path}>\n      <CurrentOrderProvider>\n        <OverlayStackProvider>\n          <Page>\n            <PageOrderOverviewLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n            <PageOrderOverviewTabs toggleVisibility={toggleRightSide} isVisible={isTabsSideVisible} />\n          </Page>\n        </OverlayStackProvider>\n      </CurrentOrderProvider>\n    </AppGridPage>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\nexport default PageOrderOverview;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n        ? p.theme.globals.inputPlaceholderColor\n        : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px 8px;\n\n  font-weight: 500;\n  font-size: 13px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const AreaStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../i18e';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { AreaStyledComp } from './CellStyles';\n\nexport const OverviewAreaHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox\n      fxDirection={'row'}\n      justifyContent={'space-between'}\n      height={'max-content'}\n      alignItems={'center'}\n      minHeight={'36px'}\n      padding={'4px 0'}\n    >\n      <AreaStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </AreaStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <AreaStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </AreaStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <AreaStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </AreaStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <AreaStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </AreaStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <AreaStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </AreaStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { RenderOverviewAreaComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../i18e';\nimport React, { useMemo } from 'react';\nimport { AreaStyledComp } from './CellStyles';\n\nexport const OverviewTextArea: RenderOverviewAreaComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <AreaStyledComp.Cell>\n      <AreaStyledComp.CellText $isTitle $size={13} $padding={'6px 8px'}>\n        {cell?.title}\n      </AreaStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'column'}\n        gap={8}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 32 }}\n      >\n        {!value || ['string', 'number'].includes(typeof value) ? (\n          <AreaStyledComp.CellText $isTitle={!value} $weight={500}>\n            {value || t('undefined')}\n          </AreaStyledComp.CellText>\n        ) : (\n          value\n        )}\n      </FlexBox>\n    </AreaStyledComp.Cell>\n  );\n};\n","import ButtonIcon from './ButtonIcon';\nimport FlexBox from './FlexBox';\nimport { Text } from './Text';\nimport styled from 'styled-components';\nimport { t } from '../../i18e';\nimport { isUndefined } from 'lodash';\n\nexport const DefaultContent: React.FC<{ content?: string }> = ({ content } = {}) => {\n  return <div>{`Default content: ${content}`}</div>;\n};\nexport const ErrorContent: React.FC<{ error?: string }> = ({ error } = {}) => {\n  return <div>{`Error: ${error}`}</div>;\n};\n\nexport const ModalHeader = ({\n  onClose,\n  onBackPress,\n  title,\n  showSubmitButton,\n  canSubmit,\n  renderTitle,\n  ...props\n}: {\n  canSubmit?: boolean;\n  onBackPress?: () => void;\n  onClose?: () => void;\n  title?: string;\n  showSubmitButton?: boolean;\n  renderTitle?: React.ReactNode;\n}) => {\n  return (\n    <Header padding={'4px 0'} {...props} gap={8}>\n      <FlexBox fillWidth fxDirection={'row'} justifyContent={'space-between'} alignItems={'stretch'} height={'32px'}>\n        {onBackPress && (\n          <ButtonIcon\n            variant={'textExtraSmall'}\n            icon={'SmallArrowLeft'}\n            iconSize={'22px'}\n            padding={'0'}\n            style={{ minWidth: 'max-content', minHeight: '100%' }}\n            onClick={onBackPress || onClose}\n          >\n            {t('Back')}\n          </ButtonIcon>\n        )}\n\n        {renderTitle || (\n          <FlexBox justifyContent={'center'} overflow={'hidden'}>\n            <Text\n              $weight={600}\n              $size={14}\n              style={{ textTransform: 'uppercase', textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n            >\n              {title}\n            </Text>\n          </FlexBox>\n        )}\n\n        {showSubmitButton && (\n          <ButtonIcon\n            variant={'textExtraSmall'}\n            gap={'6px'}\n            type={showSubmitButton ? 'submit' : 'button'}\n            padding={'0 6px'}\n            endIcon={'done'}\n            endIconSize={'22px'}\n            style={{ minWidth: 'max-content', minHeight: '100%' }}\n            disabled={!canSubmit}\n          >\n            {'Ok'}\n          </ButtonIcon>\n        )}\n\n        {onClose && (\n          <ButtonIcon\n            variant={'onlyIconNoEffects'}\n            icon={'close'}\n            iconSize={'95%'}\n            size={'24px'}\n            padding={'0'}\n            onClick={onClose}\n          ></ButtonIcon>\n        )}\n      </FlexBox>\n    </Header>\n  );\n};\n\nconst Header = styled(FlexBox)`\n  height: 32px;\n`;\n\nexport const DrawerFooter = ({\n  submitButtonText = 'Прийняти',\n  loading,\n  extraFooter,\n  canSubmit,\n  onCreatePress,\n  resetButtonShown,\n  onAcceptPress,\n  canAccept,\n}: {\n  onAcceptPress?: () => void;\n  canSubmit?: boolean;\n  canAccept?: boolean;\n  resetButtonShown?: boolean;\n  extraFooter?: React.ReactNode;\n  loading?: boolean;\n  onCreatePress?: () => void;\n  submitButtonText?: string;\n}) => {\n  return (\n    <Footer fillWidth>\n      {extraFooter}\n\n      <FlexBox padding={'8px 8px'} fxDirection={'row'} gap={8} alignItems={'center'}>\n        {resetButtonShown && (\n          <ButtonIcon variant={'onlyIcon'} icon={'clear'} size={'36px'} iconSize={'80%'} type={'reset'} />\n        )}\n\n        {onCreatePress && (\n          <ButtonIcon variant={'onlyIcon'} icon={'plus'} size={'36px'} iconSize={'80%'} onClick={onCreatePress} />\n        )}\n\n        <ButtonIcon\n          variant={'filledMiddle'}\n          flex={1}\n          type={isUndefined(canSubmit) ? 'button' : 'submit'}\n          style={{ padding: '0 12px' }}\n          textTransform={'uppercase'}\n          fontWeight={600}\n          endIcon={'SmallArrowRight'}\n          endIconSize={'24px'}\n          disabled={isUndefined(canSubmit) ? !canAccept : !canSubmit}\n          isLoading={loading}\n          onClick={onAcceptPress}\n        >\n          {submitButtonText}\n        </ButtonIcon>\n      </FlexBox>\n    </Footer>\n  );\n};\n\nconst Footer = styled(FlexBox)``;\n\nexport const OverlayForm = ({\n  children,\n  ...props\n}: { children?: React.ReactNode } & React.HTMLAttributes<HTMLFormElement>) => {\n  return <Form {...props}>{children}</Form>;\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n"],"names":["OverlayLocalCTX","createContext","OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","Provider","value","onClose","compId","_objectSpread","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColorDark","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","open","create","Component","OrderOverviewCustomerInfo","cell","data","renderCells","_customer$name","_customer$name2","_customer$name3","_customer$name4","_customer$name5","customer","label","t","first","visible","businessType","second","middle","email","phone","sexType","engagementSource","age","_cell$value","_jsxs","fxDirection","padding","gap","justifyContent","Text","$size","$weight","AreaStyledComp","title","OverviewAreaHeader","OrderOverviewInfoTabsEnum","orderOverviewInfoTabs","_enumToTabs","Box","_p","overlayS","currentOrder","useOrdersSelector","General","currentTab","setCurrentTab","cellsMap","orderOverviewCellsMap","orderOverviewCells","forEach","item","_orderOverviewCellsMa","tab","push","getOrderOverviewCellsMap","_cellsMap$currentTab","CellComponent","_objectWithoutProperties","_excluded","overlayHandler","OverviewTextArea","flex","TabSelector","optionProps","fitContentH","options","onOptSelect","option","getValue","_data$manager","_data$manager$user","manager","user","_data$reference","reference","internal","_data$group","_data$group$reference","group","_data$group2","strategy","_data$total3","_data$total4","_data$total","_data$total2","numberWithSpaces","total","amount","items","status","Customer","Delivery","_data$deliveries2","_data$deliveries","deliveries","Invoicing","Additional","CurrentOrderCTX","useCurrentOrder","_useAppParams","useAppParams","orderId","dispatch","useAppDispatch","service","useAppServiceProvider","ServiceName","CTX","_origin","getSlots","_getSlots","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","wrap","_context","next","abrupt","getOrderSlotsThunk","undefined","stop","_x","apply","arguments","getPayments","_getPayments","_callee2","_context2","getAllPaymentsByOrderThunk","_x2","getInvoices","_getInvoices","_callee3","_context3","getAllInvoicesByOrderThunk","_x3","getDeliveries","_getDeliveries","_callee4","_context4","getAllDeliveriesByOrderThunk","_x4","useEffect","_id","getById","ChatWsInitializer","React","ref","permissionId","onConnect","onConnectError","onJoin","onLeave","onTyping","chatId","onSend","handleConnected","ChatWs","wsConnectionStatusAction","type","WsTypeEnum","handleDisconnect","socket","connection","unsubscribers","active","connect","error","clb","ChatMessage","msg","isRequest","MessageBox","maxWidth","alignSelf","$isRequest","$align","$lineHeight","text","createdAt","format","Date","locale","uk","modalBorderColor","validation","YUP","shape","required","uuid","_useForm","onSubmit","useForm","defaultValues","resolver","yupResolver","reValidateMode","watch","resetField","register","setValue","handleSubmit","typingRef","useRef","formValues","FlexForm","fData","sendChatMessageThunk","onSuccess","InputText","$height","onChange","current","onBlur","ButtonIcon","disabled","variant","sizeType","MessagesList","chatState","useChatSelector","loaders","useLoaders","keysMap","dataMap","chat","setChat","_useState3","_useState4","isTypingMap","setIsTypingMap","isConnected","wsConnectionStatus","loadMessages","getChatMessagesThunk","onLoading","getChat","getChatThunk","_ref3","onError","err","_err$response","response","HttpStatusCode","createChatThunk","_ref2","createChat","renderTypings","Object","entries","_ref4","_ref5","key","$padding","messagesList","mapKey","messages","listsMap","renderMessages","_msg$sender","sender","_data$data$member","_data$data$member2","member","setTyping","_defineProperty","omit","_data$data$member3","_data$data","_data$data$member4","_data$data$member4$us","_data$data2","_data$data2$member","_data$data2$member$cu","_data$data3","_data$data3$member","_data$data3$member$in","ToastService","integration","_data$data$member5","_data$data4","_data$data4$member","_data$data4$member$us","_data$data5","_data$data5$member","_data$data5$member$cu","_data$data6","_data$data6$member","_data$data6$member$in","_data$data7","_data$data7$member","_data$data$chat","addChatMessageAction","console","log","ChatForm","OrderChatTab","order","Chat","OrderOverviewTabs","tabs","enumToFilterOptions","OverviewFooter","Footer","size","iconSize","icon","onEdit","DeleteBtn","onDelete","margin","isLoading","isRefresh","onRefresh","OpenBtn","onOpenRightSide","Container","sideBarBackgroundColor","Content","sideBarBorderColor","_templateObject3","_templateObject4","colors","_templateObject5","Order","router","useAppRouter","renderTab","Info","OrderOverviewInfoTab","ModalHeader","onBackPress","goBack","_o","_v","i","LeftSide","toggleRightSideVisibility","setLoading","ordersServ","orders","OrderOverviewXL","refreshCurrent","tableData","_Order$slots","slots","_el$offer","offer","tableConfigs","actionsCreator","_ctx","_Order$slots2","offerTypeFilterOptions","defaultValue","preventDefault","onResetPress","TableList","hasSearch","hasFilter","refresh","tableTitles","orderSlotsTableColumns","ctx","invoices","invoicesTableColumns","_Order$deliveries","OrderTabNameEnum","toggleOptions","RightSide","backgroundColorLight","isVisible","_currentOrder$referen","_currentOrder$referen2","toggleVisibility","setCurrent","OrderContentTab","Invoices","OrderInvoicesTab","Payments","OrderPaymentsTab","Deliveries","OrderDeliveriesTab","DrawerHeader","Page","takeFullGridArea","path","AppModuleName","isTabsSideVisible","setIsTabsSideVisible","toggleRightSide","AppGridPage","CurrentOrderProvider","OverlayStackProvider","PageOrderOverviewLeftSide","PageOrderOverviewTabs","css","takeFullPlace","HeaderButton","accentColor","base","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","_templateObject6","CategoryItem","_templateObject7","fontColorSidebar","field","backgroundColor","_ref$title","_ref$openOverlayButto","openOverlayButtonTitle","onOpenOverlayPress","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","height","minHeight","marginRight","ErrorContent","showSubmitButton","canSubmit","renderTitle","Header","minWidth","textTransform","textOverflow","whiteSpace","endIcon","endIconSize","DrawerFooter","_ref4$submitButtonTex","submitButtonText","loading","extraFooter","onCreatePress","resetButtonShown","isUndefined","fontWeight","modalBackgroundColor"],"sourceRoot":""}