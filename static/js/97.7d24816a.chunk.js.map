{"version":3,"file":"static/js/97.7d24816a.chunk.js","mappings":"qYAyBaA,GAA6BC,EAAAA,EAAAA,IAAoBC,EAAAA,GAExDC,EAAaC,EAAAA,SAAiCC,MAAM,CACxDC,MAAOF,EAAAA,SAAaG,WACpBC,KAAMJ,EAAAA,SAAaG,WACnBE,QAASL,EAAAA,OACC,CACNM,IAAKN,EAAAA,WAENO,WACHC,KAAMR,EAAAA,SAAaS,OAAMC,EAAAA,EAAAA,IAAYZ,EAAAA,IAAoBK,WACzDQ,MAAOX,EAAAA,SACPY,MAAOZ,EAAAA,SACPa,SAAUb,EAAAA,OAAW,CACnBc,SAAUd,EAAAA,SACVe,UAAWf,EAAAA,WAEbgB,YAAahB,EAAAA,SAAaiB,IAAI,KAAKV,aA2FrC,UAxFgE,SAAHW,GAA0C,IAApCC,EAAYD,EAAZC,aAAcC,EAAQF,EAARE,SAAaC,GAACC,EAAAA,EAAAA,GAAAJ,EAAAK,GACvFC,GAAgBC,EAAAA,EAAAA,KACtBC,GAKIC,EAAAA,EAAAA,IAA+B,CACjCC,eAAaC,EAAAA,EAAAA,GAAA,GAAOV,GACpBW,UAAUC,EAAAA,EAAAA,GAAYhC,GACtBiC,eAAgB,aAPHC,EAAMP,EAAnBQ,UAAaD,OACbE,EAAQT,EAARS,SACAC,EAAQV,EAARU,SACAC,EAAYX,EAAZW,aAMFC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAK9B,OACEI,EAAAA,EAAAA,KAACC,EAAAA,GAAShB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRiB,MAAO,oBACHzB,GAAC,IACLD,SAAUiB,GARE,SAACU,GACf3B,GAAYA,GAAQS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIkB,GAAI,IAAEL,UAAAA,KAASb,EAAAA,EAAAA,GAAA,GAASL,EAAcwB,OAClE,IAMoC,SAAAf,GAC9BgB,QAAQC,MAAM,wBAAyBjB,EACzC,IACAkB,QAASvD,EACTwD,WAAY,OACZC,oBAAqB,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAK,OAAOpB,EAASmB,EAAMC,EAAM,EAC/DC,aAAab,EAAAA,EAAAA,KAACc,EAAAA,GAAsB7B,EAAAA,EAAAA,GAAA,GAAKL,IAAkBmC,UAE3DC,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAAAF,SAAA,EACTC,EAAAA,EAAAA,MAACE,EAAAA,GAAO,CAACC,MAAO,CAAEC,QAAS,OAAQC,oBAAqB,aAAeC,IAAK,EAAEP,SAAA,EAC5Ef,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACjE,OAAOkE,EAAAA,EAAAA,GAAE,SAAUlB,MAAOjB,EAAO/B,MAAOC,UAAQ,EAAAwD,UAC1Df,EAAAA,EAAAA,KAACyB,EAAAA,IAASxC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACyC,aAAaF,EAAAA,EAAAA,GAAE,gBAAoBjC,EAAS,UAAQ,IAAEhC,UAAQ,EAACoE,WAAS,QAGrF3B,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACjE,OAAOkE,EAAAA,EAAAA,GAAE,QAASlB,MAAOjB,EAAO7B,KAAMD,UAAQ,EAAAwD,UACxDf,EAAAA,EAAAA,KAACyB,EAAAA,IAASxC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACyC,aAAaF,EAAAA,EAAAA,GAAE,eAAmBjC,EAAS,OAAQ,CAAEhC,UAAU,KAAO,IAAEA,UAAQ,WAI/FyD,EAAAA,EAAAA,MAACE,EAAAA,GAAO,CAACU,YAAa,MAAON,IAAK,EAAEP,SAAA,EAClCf,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACjE,OAAOkE,EAAAA,EAAAA,GAAE,SAAUlB,MAAOjB,EAAOtB,MAAMgD,UACjDf,EAAAA,EAAAA,KAACyB,EAAAA,IAASxC,EAAAA,EAAAA,GAAA,CAACyC,aAAaF,EAAAA,EAAAA,GAAE,UAAcjC,EAAS,cAGnDS,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACjE,OAAOkE,EAAAA,EAAAA,GAAE,SAAUlB,MAAOjB,EAAOrB,MAAM+C,UACjDf,EAAAA,EAAAA,KAACyB,EAAAA,IAASxC,EAAAA,EAAAA,GAAA,CAACyC,aAAaF,EAAAA,EAAAA,GAAE,UAAcjC,EAAS,iBAIrDyB,EAAAA,EAAAA,MAACE,EAAAA,GAAO,CAACU,YAAa,MAAON,IAAK,EAAEP,SAAA,EAClCf,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACjE,OAAOkE,EAAAA,EAAAA,GAAE,aAAclB,MAAOjB,EAAOpB,SAAS8C,UACxDf,EAAAA,EAAAA,KAACyB,EAAAA,IAASxC,EAAAA,EAAAA,GAAA,CAACyC,aAAaF,EAAAA,EAAAA,GAAE,cAAkBjC,EAAS,qBAAsB,CAAEsC,eAAe,SAG9F7B,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACjE,OAAOkE,EAAAA,EAAAA,GAAE,YAAalB,MAAOjB,EAAOpB,SAAS8C,UACvDf,EAAAA,EAAAA,KAACyB,EAAAA,IAASxC,EAAAA,EAAAA,GAAA,CAACyC,aAAaF,EAAAA,EAAAA,GAAE,aAAiBjC,EAAS,oBAAqB,CAAEsC,eAAe,YAI9Fb,EAAAA,EAAAA,MAACE,EAAAA,GAAO,CACNU,YAAa,MACbN,IAAK,EACLQ,QAAS,cACTC,WAAY,SACZC,eAAgB,gBAAgBjB,SAAA,EAEhCf,EAAAA,EAAAA,KAACiC,EAAAA,EAAI,CAACC,QAAS,IAAKC,MAAO,GAAGpB,SAC3B,0HAGHf,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CACLC,KAAM,OACNC,QAASxC,EACTyC,SAAU,SAAAC,GACRzC,EAAayC,EAAEF,QACjB,YAUZ,C","sources":["components/Forms/warehousing/FormCreateWarehouse.tsx"],"sourcesContent":["import { IWarehouseDto, WarehouseTypeEnum } from '../../../types/warehousing/warehouses.types';\nimport { useAppForm } from '../../../hooks';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport ModalForm, { ModalFormProps } from '../../ModalForm';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { enumToArray, enumToFilterOptions } from '../../../utils/fabrics';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../../atoms/FormAfterSubmitOptions';\nimport React, { useState } from 'react';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../i18e';\nimport { FormInputs } from '../components/atoms';\nimport { Text } from '../../atoms/Text';\nimport Switch from '../../atoms/Switch';\n\nexport interface FormCreateWarehouseProps extends Omit<ModalFormProps<any, any, IWarehouseFormData>, 'onSubmit'> {\n  onSubmit?: AppSubmitHandler<IWarehouseFormData>;\n  update?: string;\n}\nexport interface IWarehouseFormData extends IWarehouseDto {\n  asDefault?: boolean;\n}\n\nexport const warehouseTypeFilterOptions = enumToFilterOptions(WarehouseTypeEnum);\n\nconst validation = yup.object<IWarehouseFormData>().shape({\n  label: yup.string().required(),\n  code: yup.string().required(),\n  manager: yup\n    .object({\n      _id: yup.string(),\n    })\n    .optional(),\n  type: yup.string().oneOf(enumToArray(WarehouseTypeEnum)).required(),\n  email: yup.string(),\n  phone: yup.string(),\n  location: yup.object({\n    latitude: yup.number(),\n    longitude: yup.number(),\n  }),\n  description: yup.string().max(250).optional(),\n});\n\nconst FormCreateWarehouse: React.FC<FormCreateWarehouseProps> = ({ defaultState, onSubmit, ...p }) => {\n  const submitOptions = useAfterSubmitOptions();\n  const {\n    formState: { errors },\n    register,\n    setValue,\n    handleSubmit,\n  } = useAppForm<IWarehouseFormData>({\n    defaultValues: { ...defaultState },\n    resolver: yupResolver(validation),\n    reValidateMode: 'onSubmit',\n  });\n  const [asDefault, setAsDefault] = useState(false);\n  const onValid = (data: IWarehouseFormData) => {\n    onSubmit && onSubmit({ ...data, asDefault }, { ...submitOptions.state });\n  };\n\n  return (\n    <ModalForm\n      title={'Create warehouse'}\n      {...p}\n      onSubmit={handleSubmit(onValid, errors => {\n        console.error('Form Create Warehouse', errors);\n      })}\n      options={warehouseTypeFilterOptions}\n      filterName={'type'}\n      onFilterValueSelect={({ name, value }) => setValue(name, value)}\n      extraFooter={<FormAfterSubmitOptions {...submitOptions} />}\n    >\n      <FormInputs>\n        <FlexBox style={{ display: 'grid', gridTemplateColumns: '1fr 125px' }} gap={8}>\n          <InputLabel label={t('label')} error={errors.label} required>\n            <InputText placeholder={t('insertLabel')} {...register('label')} required autoFocus />\n          </InputLabel>\n\n          <InputLabel label={t('code')} error={errors.code} required>\n            <InputText placeholder={t('insertCode')} {...register('code', { required: true })} required />\n          </InputLabel>\n        </FlexBox>\n\n        <FlexBox fxDirection={'row'} gap={8}>\n          <InputLabel label={t('email')} error={errors.email}>\n            <InputText placeholder={t('email')} {...register('email')} />\n          </InputLabel>\n\n          <InputLabel label={t('phone')} error={errors.phone}>\n            <InputText placeholder={t('phone')} {...register('phone')} />\n          </InputLabel>\n        </FlexBox>\n\n        <FlexBox fxDirection={'row'} gap={8}>\n          <InputLabel label={t('longitude')} error={errors.location}>\n            <InputText placeholder={t('longitude')} {...register('location.longitude', { valueAsNumber: true })} />\n          </InputLabel>\n\n          <InputLabel label={t('latitude')} error={errors.location}>\n            <InputText placeholder={t('latitude')} {...register('location.latitude', { valueAsNumber: true })} />\n          </InputLabel>\n        </FlexBox>\n\n        <FlexBox\n          fxDirection={'row'}\n          gap={8}\n          padding={'8px 0 0 8px'}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $weight={500} $size={12}>\n            {'Склад по замовчуванню'}\n          </Text>\n\n          <Switch\n            size={'32px'}\n            checked={asDefault}\n            onChange={e => {\n              setAsDefault(e.checked);\n            }}\n          />\n        </FlexBox>\n\n        {/*<InputLabel label={t('comment')} error={errors.description}>*/}\n        {/*  <TextareaPrimary placeholder={t('insertComment')} {...register('description')} maxLength={250} />*/}\n        {/*</InputLabel>*/}\n      </FormInputs>\n    </ModalForm>\n  );\n};\n\nexport default FormCreateWarehouse;\n"],"names":["warehouseTypeFilterOptions","enumToFilterOptions","WarehouseTypeEnum","validation","yup","shape","label","required","code","manager","_id","optional","type","oneOf","enumToArray","email","phone","location","latitude","longitude","description","max","_ref","defaultState","onSubmit","p","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useAppForm","useAppForm","defaultValues","_objectSpread","resolver","yupResolver","reValidateMode","errors","formState","register","setValue","handleSubmit","_useState","useState","_useState2","_slicedToArray","asDefault","setAsDefault","_jsx","ModalForm","title","data","state","console","error","options","filterName","onFilterValueSelect","_ref2","name","value","extraFooter","FormAfterSubmitOptions","children","_jsxs","FormInputs","FlexBox","style","display","gridTemplateColumns","gap","InputLabel","t","InputText","placeholder","autoFocus","fxDirection","valueAsNumber","padding","alignItems","justifyContent","Text","$weight","$size","Switch","size","checked","onChange","e"],"sourceRoot":""}