{"version":3,"file":"static/js/588.2b4e6f2e.chunk.js","mappings":"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","sources":["components/Forms/offers/categories/OfferCategoriesSelector.tsx","components/Forms/offers/images/AddImageSetModal.tsx","components/Forms/offers/images/UploadOfferImageModal.tsx","components/Forms/offers/images/FormOfferImagesComponent.tsx","components/Forms/offers/variations/OfferPropertySelector.tsx","components/atoms/ImagePreviewSmall.tsx","components/atoms/OverlayBase.tsx","components/atoms/PropertiesGroupSelector.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport FlexBox, { FlexLabel, FlexLi, FlexUl } from '../../../atoms/FlexBox';\nimport { OfferCategoryEntity } from '../../../../types/dir.types';\nimport styled from 'styled-components';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport CheckBox from '../../../TableList/TebleCells/CellComponents/CheckBox';\nimport { Text } from '../../../atoms/Text';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { UUID } from '../../../../types/utils.types';\nimport ButtonIcon from '../../../atoms/ButtonIcon';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\n\nexport interface OfferCategoriesSelectorProps {\n  onSelect?: (id: string, option?: OfferCategoryEntity) => void;\n  onChange?: (ids: string) => void;\n  onChangeIds?: (ids: string[]) => void;\n  onChangeMap?: (map: IsSelectedIdsMap) => void;\n  children?: React.ReactNode;\n  defaultData?: string[];\n  selectedIds?: string[];\n  options?: OfferCategoryEntity[];\n  offer?: OfferEntity;\n}\n\nconst getUnicIds = (map: IsSelectedIdsMap) => {\n  const idsArrays = Object.keys(map).filter(key => {\n    return map?.[key]?.length;\n  });\n\n  return idsArrays;\n};\n\ntype IsSelectedIdsMap = Record<UUID, UUID[]>;\nconst OfferCategoriesSelector: React.FC<OfferCategoriesSelectorProps> = ({ onChangeIds, onChange, offer }) => {\n  const treeData = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n\n  const [selectedMap, setSelectedMap] = useState<IsSelectedIdsMap>({});\n\n  const init = useMemo(() => {\n    if (!offer?.categories) {\n      return undefined;\n    }\n\n    const _next: IsSelectedIdsMap = {};\n    offer?.categories?.forEach(category => {\n      const parentId = category.parent?._id;\n      const catId = category?._id;\n\n      if (!catId) return;\n\n      if (parentId) {\n        _next[parentId] = _next[parentId] ? [..._next[parentId], catId] : [catId];\n      }\n      _next[catId] = _next[catId] ? [..._next[catId], catId] : [catId];\n    });\n    Object.entries(_next).forEach(([key, val]) => {\n      if (_next[key]?.length > 1) {\n        _next[key] = Array.from(new Set(val));\n      }\n    });\n\n    return _next;\n  }, [offer?.categories]);\n\n  useEffect(() => {\n    if (init) setSelectedMap(init);\n    // eslint-disable-next-line\n  }, []);\n\n  const toggleSelected = useCallback(\n    async (ev: { checked: boolean; _id: UUID; pathIds: UUID[] }) => {\n      onChange && onChange(ev._id);\n\n      setSelectedMap(prev => {\n        const newMap = ev.checked ? { ...prev, [ev._id]: [ev._id] } : { ...prev, [ev._id]: [] };\n\n        if (!ev.checked) {\n          prev?.[ev._id]?.forEach(removeId => {\n            newMap[removeId] = [];\n          });\n          newMap[ev._id] = [];\n        } else {\n          let ids: string[] = ev.pathIds;\n          ev.pathIds.forEach((registerId, index) => {\n            ids = ids.slice(1, ids.length);\n            if (registerId === ev._id) {\n              newMap[registerId] = [registerId];\n            } else {\n              newMap[registerId] = [...new Set([...(newMap[registerId] ?? []), ...ids])];\n            }\n          });\n        }\n\n        onChangeIds && onChangeIds(getUnicIds(newMap));\n        return newMap;\n      });\n    },\n    [onChange, onChangeIds]\n  );\n\n  const renderCategories = useMemo(() => {\n    const isSelected = (id: UUID) => {\n      return !!selectedMap?.[id]?.length;\n    };\n    return treeData.map(parent => {\n      return (\n        <RootBox key={parent._id}>\n          <RenderCategory item={parent} depth={0} pathIds={[]} isChecked={isSelected} onChange={toggleSelected} />\n        </RootBox>\n      );\n    });\n  }, [selectedMap, toggleSelected, treeData]);\n\n  return <FlexBox minWidth={'max-content'}>{renderCategories}</FlexBox>;\n};\n\nexport default OfferCategoriesSelector;\n\nconst RootBox = styled(FlexBox)`\n  //padding: 8px 0;\n  // &:not(:first-child) {\n  //   border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  // }\n`;\n\nconst CategoriesList = styled(FlexUl)<{ numColumns?: number }>``;\n\nconst CategoryListItem = styled(FlexLi)`\n  &:not(:last-child) {\n  }\n\n  min-width: max-content;\n`;\n\nconst CategoryItem = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst RenderCategory = ({\n  pathIds,\n  item,\n  depth = 0,\n  onChange,\n  isChecked,\n}: {\n  pathIds: UUID[];\n  item: OfferCategoryEntity;\n  depth: number;\n  onChange?: (ev: { checked: boolean; _id: UUID; pathIds: UUID[] }) => void;\n  isChecked?: (id: UUID) => boolean;\n}) => {\n  const [isOpen, setIsOpen] = useState(!!item?.childrenList?.length);\n  const itemId = item?._id ?? '';\n\n  const nextPathIds = [...pathIds, itemId];\n  return (\n    <CategoryListItem key={`cate-value-${itemId}`} padding={depth ? '0 0 0 16px' : ''}>\n      <CategoryItem gap={12} fxDirection={'row'} alignItems={'center'} padding={'8px 0'}>\n        <ButtonIcon\n          variant={'onlyIconNoEffects'}\n          iconSize={'22px'}\n          disabled={!item?.childrenList?.length}\n          icon={isOpen ? 'SmallArrowDown' : 'SmallArrowRight'}\n          onClick={() => {\n            setIsOpen(p => !p);\n          }}\n        />\n\n        <FlexLabel flex={1} fxDirection={'row'} alignItems={'center'} gap={12} padding={'4px 6px'}>\n          <CheckBox\n            size={'22px'}\n            checked={isChecked ? isChecked(itemId) : false}\n            onChange={ev => {\n              onChange && onChange({ pathIds: nextPathIds, _id: itemId, checked: ev.checked });\n            }}\n          />\n\n          <Text $size={14} $weight={500}>\n            {item.label}\n          </Text>\n        </FlexLabel>\n      </CategoryItem>\n\n      {isOpen && (\n        <CategoriesList>\n          {item.childrenList?.map(child => {\n            return (\n              <RenderCategory\n                key={child._id}\n                depth={depth + 1}\n                item={child}\n                onChange={onChange}\n                isChecked={isChecked}\n                pathIds={nextPathIds}\n              />\n            );\n          })}\n        </CategoriesList>\n      )}\n    </CategoryListItem>\n  );\n};\n","import { OfferImageSlotEntity } from '../../../../types/offers/offers.types';\nimport ModalForm, { ModalFormProps } from '../../../ModalForm';\nimport { ChangeEventHandler, useRef, useState } from 'react';\nimport { FilterOption } from '../../../atoms/TabSelector';\nimport FlexBox from '../../../atoms/FlexBox';\nimport SvgIcon from '../../../atoms/SvgIcon';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport ButtonsGroup from '../../../atoms/ButtonsGroup';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../atoms/ButtonIcon';\nimport { ImageSetSrcType } from '../../../../types/offers/offer-images.types';\nimport { formAddImageSetTabs } from 'data';\n\nexport interface FormAddImageSetData extends Partial<Omit<OfferImageSlotEntity, '_id' | 'createdAt' | 'updatedAt'>> {}\n\nexport interface AddImageSetModalProps extends Omit<ModalFormProps<any, any, FormAddImageSetData>, 'onSubmit'> {\n  onSubmit?: (data: Partial<FormAddImageSetData> , setId?: string, setIndex?: number) => void;\n  setId?: string;\n  setIndex?: number;\n  type?: ImageSetSrcType;\n}\n\nconst AddImageSetModal = ({\n  title,\n  fillHeight = true,\n  onSubmit,\n  onClose,\n  defaultState,\n  type,\n  ...props\n}: AddImageSetModalProps) => {\n  const [current, setCurrent] = useState<FilterOption<ImageSetSrcType> | undefined>(formAddImageSetTabs[0]);\n  const [formData, setFormData] = useState<FormAddImageSetData>(defaultState || {});\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleSubmitForm = () => {\n    onSubmit && onSubmit(formData);\n    onClose && onClose();\n  };\n\n  const handleInputChange: ChangeEventHandler<HTMLInputElement> = e => {\n    const { name, value } = e.target;\n\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n  const handleClear = () => {\n    const key = current?.value;\n    key && setFormData(prev => ({ ...prev, [key]: '' }));\n  };\n\n  return (\n    <ModalForm\n      title={title || 'Додати новий сет зображень'}\n      fillHeight={fillHeight}\n      {...props}\n      width={'360px'}\n      onClose={onClose}\n      onSubmit={handleSubmitForm}\n    >\n      <FormContentGrid>\n        <FlexBox fillWidth fillHeight alignItems={'center'} overflow={'hidden'}>\n          {current?.value && formData[current?.value] ? (\n            <Image src={formData[current?.value] as never} />\n          ) : (\n            <AddImageBox disabled>\n              <SvgIcon icon={'plus'} size={'56px'} />\n\n              <input name={'img_preview'} type={'file'} className={'visually-hidden'} disabled />\n            </AddImageBox>\n          )}\n        </FlexBox>\n\n        {current?.value && (\n          <FlexBox fxDirection={'row'} gap={6} alignItems={'flex-end'}>\n            <InputLabel label={current?.label?.replace('img_', 'image ').toUpperCase()} required={current?.required}>\n              <InputText\n                ref={inputRef}\n                name={current?.value}\n                value={formData[current?.value] || ''}\n                onChange={handleInputChange}\n                placeholder={'Впишіть або вставте посилання на зображення'}\n                required={current?.required}\n                autoFocus\n              />\n            </InputLabel>\n\n            <ButtonIcon variant={'onlyIcon'} icon={'close'} size={'28px'} iconSize={'100%'} onClick={handleClear} />\n          </FlexBox>\n        )}\n\n        <FlexBox padding={'8px 0'}>\n          <ButtonsGroup\n            options={formAddImageSetTabs}\n            currentOption={current}\n            // defaultIndex={type ? formAddImageSetTabs.findIndex(el => el.value === type) : 0}\n            onSelect={info => {\n              setCurrent(info.option);\n              // inputRef.current?.focus({ preventScroll: true });\n            }}\n          />\n        </FlexBox>\n      </FormContentGrid>\n    </ModalForm>\n  );\n};\nconst FormContentGrid = styled.div`\n  flex: 1;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr min-content min-content;\n  gap: 6px;\n\n  padding: 8px;\n  overflow: hidden;\n`;\nconst AddImageBox = styled.label<{ disabled?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 100%;\n  width: 100%;\n  max-height: 100%;\n\n  fill: ${p => p.theme.sideBarBorderColor};\n\n  border-radius: 2px;\n  border: 2px solid ${p => p.theme.sideBarBorderColor};\n\n  transition: ${p => p.theme.globals.timingFnMui};\n\n  pointer-events: ${p => (p.disabled ? 'none' : 'all')};\n  &:hover {\n    fill: ${p => p.theme.accentColor.base};\n    border-color: ${p => p.theme.accentColor.light};\n  }\n`;\n\nconst Image = styled.img`\n  //min-width: 100px;\n  //max-width: 100px;\n  //\n  //height: 145px;\n\n  max-height: 100%;\n`;\nexport default AddImageSetModal;\n","import { OfferImageSlotEntity } from '../../../../types/offers/offers.types';\nimport { ChangeEventHandler, useEffect, useState } from 'react';\nimport FlexBox, { FlexForm, FlexLabel } from '../../../atoms/FlexBox';\nimport SvgIcon from '../../../atoms/SvgIcon';\nimport styled from 'styled-components';\nimport { apiCall, FilesApi } from '../../../../api';\nimport { usePermissionsSelector } from '../../../../redux/selectors.store';\nimport { useForm } from 'react-hook-form';\nimport ButtonIcon from '../../../atoms/ButtonIcon';\nimport { Text } from '../../../atoms/Text';\nimport * as YUP from 'yup';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport DrawerBase from '../../../atoms/OverlayBase';\nimport { t } from 'i18e';\nimport { useLoaders } from '../../../../Providers/Loaders/useLoaders.hook';\nimport { CreatedModal } from '../../../../Providers/ModalProvider/ModalProvider';\n\nexport interface FormAddImageSetData extends Partial<Omit<OfferImageSlotEntity, '_id' | 'createdAt' | 'updatedAt'>> {}\n\nexport interface AddImageSetModalProps extends CreatedModal {\n  onSuccess?: (data: Partial<FilesApi.UploadFileWithLinkDto>) => void;\n\n  offerId?: string;\n}\nconst acceptedFormats = ['image/jpeg', 'image/png', 'image/webp'];\nconst maxSizeInBytes = 5 * 1024 * 1024;\nconst acceptedFormatsErrorMessage = `Only \"${acceptedFormats.map(key => key.replace('image/', '').toUpperCase()).join(', ')}\" formats are accepted`;\nconst validation = YUP.object().shape({\n  file: YUP.mixed()\n    .test('fileType', acceptedFormatsErrorMessage, (v: any) => {\n      const value: File = v;\n      return value && acceptedFormats.includes(value.type);\n    })\n    .test('fileSize', t('File size must be less than 5MB'), (v: any) => {\n      const value: File = v;\n      return value && value.size <= maxSizeInBytes;\n    }),\n});\n\nexport const _undefinedOrNullRegExp = /(?:undefined\\/|null\\/)/g;\n\nconst UploadOfferImageModal = ({ onSuccess, onClose, offerId, ...props }: AddImageSetModalProps) => {\n  const loaders = useLoaders<'getLink' | 'uploadingImg' | 'saveLink' | 'processing'>({\n    processing: { content: 'Loading...' },\n  });\n  const permissionsState = usePermissionsSelector();\n  const form = useForm<FilesApi.UploadFileWithLinkDto>({\n    defaultValues: {\n      mimeType: 'image/jpeg',\n      type: 'image',\n      offerId: offerId,\n      fileName: [permissionsState.permission.company?._id, offerId].filter(key => !!key).join('/'),\n    },\n    resolver: yupResolver(validation),\n    reValidateMode: 'onChange',\n    mode: 'onChange',\n  });\n  const FV = form.watch();\n  const [preview, setPreview] = useState(''); // Стан для збереження URL зображення\n  const file = form.watch('file');\n  const handleSubmitForm = (fData: typeof FV) => {\n    apiCall(FilesApi.Client.uploadFile, {\n      data: { ...fData, mimeType: fData.file?.type },\n      logError: true,\n      logRes: true,\n      onLoading: loaders.onLoading('processing'),\n      onSuccess: data => {\n        console.log(data);\n        onSuccess && onSuccess(data);\n        onClose && onClose();\n      },\n      onError: () => {\n        console.error({ fData });\n      },\n    });\n  };\n\n  const handleInputChange: ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.target;\n    if (files) {\n      const file = files[0];\n\n      form.setValue('file', file, { shouldDirty: true, shouldTouch: true, shouldValidate: true });\n      form.setValue('mimeType', file.type, { shouldDirty: true, shouldTouch: true, shouldValidate: true });\n    }\n\n    form\n      .trigger('file', {})\n      .then(() => {\n        form.clearErrors('file');\n      })\n      .catch(() => {\n        form.resetField('file', { keepError: true });\n        form.resetField('mimeType', { keepError: true });\n      });\n  };\n  const handleClear = () => {\n    form.unregister('file');\n    // setPreview('')\n  };\n\n  useEffect(() => {\n    if (file) {\n      try {\n        const objectUrl = URL.createObjectURL(file);\n\n        setPreview(objectUrl);\n\n        // Очищуємо URL при змінах або при видаленні файлу\n        return () => URL.revokeObjectURL(objectUrl);\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      setPreview('');\n    }\n  }, [file]);\n  useEffect(() => {\n    console.log({ preview, file });\n  }, [file, preview]);\n  return (\n    <DrawerBase title={'Завантажити зображення'} fillHeight width={'360px'} onClosePress={onClose}>\n      <FormContentGrid\n        onSubmit={form.handleSubmit(handleSubmitForm, errors => {\n          console.error('Upload image form error', errors);\n        })}\n      >\n        <FlexBox fillWidth fillHeight alignItems={'center'} overflow={'hidden'}>\n          <AddImageBox>\n            {preview ? (\n              <ImageBox>\n                <Image src={preview} />\n              </ImageBox>\n            ) : (\n              <SvgIcon className={'icon'} icon={'plus'} size={'56px'} />\n            )}\n\n            <input\n              accept={acceptedFormats.join(', ')}\n              // ! {...form.register('files', { required: true })}\n              name={'file'}\n              onChange={handleInputChange}\n              type={'file'}\n              className={'visually-hidden'}\n            />\n\n            {form.formState.errors?.file && (\n              <ErrorBox padding={'16px'}>\n                <Text $weight={600} $size={13}>\n                  {form.formState.errors?.file.message}\n                </Text>\n              </ErrorBox>\n            )}\n          </AddImageBox>\n        </FlexBox>\n\n        <FlexBox padding={'16px 0 0'} gap={12} fxDirection={'row'}>\n          <ButtonIcon sizeType={'middle'} variant={'def'} onClick={onClose}>\n            {t('Back')}\n          </ButtonIcon>\n\n          <ButtonIcon sizeType={'middle'} variant={'outlined'} onClick={handleClear} margin={'0 auto 0 0'}>\n            {t('Clear')}\n          </ButtonIcon>\n\n          <ButtonIcon type={'submit'} sizeType={'middle'} variant={'filled'}>\n            {t('Accept')}\n          </ButtonIcon>\n        </FlexBox>\n      </FormContentGrid>\n    </DrawerBase>\n  );\n};\nconst FormContentGrid = styled(FlexForm)`\n  flex: 1;\n  padding: 16px 8px;\n  overflow: hidden;\n`;\nconst AddImageBox = styled(FlexLabel)<{ disabled?: boolean }>`\n  position: relative;\n  align-items: center;\n  justify-content: center;\n\n  height: 100%;\n  width: 100%;\n  max-height: 100%;\n\n  & .icon {\n    fill: ${p => p.theme.sideBarBorderColor};\n    transition: ${p => p.theme.globals.timingFnMui};\n  }\n\n  border-radius: 4px;\n  border: 2px solid ${p => p.theme.sideBarBorderColor};\n\n  transition: ${p => p.theme.globals.timingFnMui};\n\n  &:hover {\n    & .icon {\n      fill: ${p => p.theme.accentColor.base};\n    }\n\n    border-color: ${p => p.theme.accentColor.light};\n  }\n\n  &[disabled] {\n    pointer-events: none;\n  }\n`;\n\nconst Image = styled.img`\n  //min-width: 100px;\n  //max-width: 100px;\n  //\n  //height: 145px;\n  width: 100%;\n`;\nconst ImageBox = styled(FlexBox)`\n  max-width: 100%;\n  width: 100%;\n  max-height: 100%;\n  object-fit: cover;\n  aspect-ratio: 1/35;\n\n  overflow: hidden;\n`;\n\nconst ErrorBox = styled(FlexBox)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n\n  backdrop-filter: blur(3px);\n`;\nexport default UploadOfferImageModal;\n\n// ? 2023 Любін Офіс\n// ? Лівчиці / Курятник 1 / Курятник 2\n","import FlexBox from '../../../atoms/FlexBox';\nimport { OfferImageSlotEntity } from '../../../../types/offers/offers.types';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { Text } from '../../../atoms/Text';\nimport { useModalService } from '../../../../Providers/ModalProvider/ModalProvider';\nimport AddImageSetModal, { FormAddImageSetData } from './AddImageSetModal';\nimport ImagePreviewSmall from '../../../atoms/ImagePreviewSmall';\nimport ButtonIcon from '../../../atoms/ButtonIcon';\nimport { t } from '../../../../i18e';\nimport { formAddImageSetTabs } from '../../../../data';\nimport { ImageSetSrcType } from '../../../../types/offers/offer-images.types';\nimport { isNumber } from 'lodash';\nimport UploadOfferImageModal from './UploadOfferImageModal';\n\nexport interface FormOfferImagesComponentProps {\n  onChangeState?: (state: Partial<OfferImageSlotEntity>[]) => void;\n  initialData?: Partial<OfferImageSlotEntity>[];\n  renderHeader?: React.ReactNode;\n  canEditOrder?: boolean;\n  onClose?: () => void;\n  hideLabel?: boolean;\n  contentContainerStyle?: React.CSSProperties;\n  FooterComponent?: React.FC<{ onAddNewImageSetPress: () => void }>;\n  HeaderComponent?: React.FC;\n\n  onlyPreviews?: boolean;\n\n  offerId?: string;\n}\n\nconst FormOfferImagesComponent: React.FC<FormOfferImagesComponentProps> = ({\n  onChangeState,\n  renderHeader,\n  initialData,\n  canEditOrder = true,\n  onClose,\n  FooterComponent,\n  contentContainerStyle,\n  hideLabel,\n  onlyPreviews = true,\n  offerId,\n}) => {\n  const modalS = useModalService();\n  const [formData, setFormData] = useState<Partial<OfferImageSlotEntity>[]>([]);\n\n  useEffect(() => {\n    if (!initialData) {\n      return;\n    } else {\n      setFormData(initialData);\n    }\n  }, [initialData]);\n  const handleAddImageSet = (info: FormAddImageSetData) => {\n    if (onChangeState) {\n      const updatedData = [...(initialData ?? []), { ...info, order: formData.length + 1 }];\n      onChangeState(updatedData);\n    } else {\n      setFormData(prev => {\n        return [...prev, { ...info, order: formData.length + 1 }];\n      });\n    }\n  };\n  const handleChangeOrder = useCallback(\n    (currentSetOrder: number, increment: number) => {\n      setFormData(prev => {\n        const newOrder = currentSetOrder + increment;\n\n        return prev.map((set, index) => {\n          if (newOrder > formData.length || newOrder < 1) {\n            return set;\n          }\n          if (set.order === newOrder) {\n            return { ...set, order: currentSetOrder };\n          } else if (set.order === currentSetOrder) {\n            return { ...set, order: newOrder };\n          } else {\n            return set;\n          }\n        });\n      });\n    },\n    [formData.length]\n  );\n\n  const handleAddImageToSet = useCallback(\n    ({ setIndex, type, uri }: { setId?: string; setIndex?: number; uri?: string; type?: ImageSetSrcType }) => {\n      if (onChangeState && initialData) {\n        const updatedData = initialData?.map((set, index) => {\n          if (setIndex === index) {\n            return { ...set, [type as never]: uri };\n          }\n          return set;\n        });\n        onChangeState(updatedData);\n      } else {\n        setFormData(prev => {\n          const updatedData = prev.map((set, index) => {\n            if (setIndex === index) {\n              return { ...set, [type as never]: uri };\n            }\n            return set;\n          });\n          return updatedData;\n        });\n      }\n    },\n    [initialData, onChangeState]\n  );\n  // TODO need refactoring\n  const handleRemoveImageFromSet = useCallback(\n    ({ setId, setIndex, type }: { setId?: string; setIndex?: number; type?: ImageSetSrcType }) => {\n      const confirmed =\n        type !== ImageSetSrcType.img_preview || window.confirm('Буде видалено цілий сет фото.\\nПродовжити?');\n      if (!confirmed) return;\n\n      setFormData(prev => {\n        const updatedData = prev\n          .map((set, index) => {\n            if (setIndex === index) {\n              return { ...set, [type as never]: '' };\n            }\n            return set;\n          })\n          .filter(set => {\n            return set.img_preview;\n          })\n          .map((set, index) => ({ ...set, order: index + 1 }));\n\n        onChangeState && onChangeState(updatedData);\n        return updatedData;\n      });\n    },\n    [onChangeState]\n  );\n\n  const handleAddNewSet = () => {\n    modalS.create(AddImageSetModal, {\n      onSubmit: data => {\n        handleAddImageSet(data);\n      },\n    });\n  };\n  const handleUploadNewImgModalOpen = () => {\n    modalS.create(UploadOfferImageModal, {\n      offerId: offerId,\n      onSuccess: data => {\n        handleAddImageSet({\n          img_preview: data.url,\n        });\n      },\n    });\n  };\n\n  const renderImageSets = useMemo(() => {\n    let dataForRender = formData;\n    try {\n      dataForRender = [...formData].sort((a, b) => (a?.order ?? 0) - (b?.order ?? 0));\n    } catch (e) {\n      dataForRender = formData;\n    }\n\n    return dataForRender?.map((slot, slotIndex) => {\n      const renderPreviews = (onlyPreviews ? formAddImageSetTabs.slice(0, 1) : formAddImageSetTabs).map(\n        (el, imgIndex) => {\n          return (\n            <ImagePreviewSmall\n              key={`small-prev_${imgIndex}`}\n              src={slot[el?.value as never]}\n              title={el.label ?? ''}\n              onEditPress={() => {\n                modalS.open({\n                  ModalChildren: AddImageSetModal,\n                  modalChildrenProps: {\n                    defaultState: slot,\n                    type: el.value,\n                    onSubmit: data => {\n                      el.value &&\n                        data[el.value] &&\n                        handleAddImageToSet({\n                          setId: slot?._id,\n                          setIndex: slotIndex,\n                          uri: data[el.value],\n                          type: el.value,\n                        });\n                    },\n                  },\n                });\n              }}\n              onDeletePress={() => {\n                handleRemoveImageFromSet({ setId: '', setIndex: slotIndex, type: el.value });\n              }}\n            />\n          );\n        }\n      );\n\n      return (\n        <ImagesSetBox\n          key={`images-set_${slot?._id || slotIndex}`}\n          gap={6}\n          fxDirection={'row'}\n          maxWidth={'100%'}\n          overflow={'hidden'}\n        >\n          {dataForRender?.length > 1 && canEditOrder && !onlyPreviews && (\n            <SlotOrderChanger\n              currentOrder={slot?.order}\n              canMoveUp={(slot?.order ?? 0) > 1}\n              onMoveUpPress={() => {\n                isNumber(slot.order) && handleChangeOrder(slot.order, -1);\n              }}\n              canMoveDown={(slot?.order ?? 0) < formData.length}\n              onMoveDownPress={() => {\n                isNumber(slot.order) && handleChangeOrder(slot.order, +1);\n              }}\n            />\n          )}\n\n          <FlexBox className={'scrollBox'} overflow={'auto'} gap={6} fxDirection={'row'}>\n            {renderPreviews}\n          </FlexBox>\n        </ImagesSetBox>\n      );\n    });\n  }, [canEditOrder, formData, handleAddImageToSet, handleChangeOrder, handleRemoveImageFromSet, modalS, onlyPreviews]);\n\n  useEffect(() => {\n    if (initialData) {\n      setFormData(initialData as Required<OfferImageSlotEntity>[]);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <FlexBox maxWidth={'100%'} overflow={'hidden'} flex={1}>\n      {renderHeader || (\n        <FlexBox\n          padding={'4px 8px'}\n          height={'32px'}\n          fxDirection={'row'}\n          gap={2}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $weight={600} $size={14}>\n            {!hideLabel && t('Images')}\n          </Text>\n\n          <ButtonIcon type={'button'} variant={'textExtraSmall'} onClick={onClose || handleAddNewSet}>\n            {onClose ? t('Close') : t('Add')}\n          </ButtonIcon>\n        </FlexBox>\n      )}\n\n      <FlexBox\n        gap={6}\n        padding={'8px 0'}\n        style={contentContainerStyle}\n        fxDirection={onlyPreviews ? 'row' : 'column'}\n        flexWrap={onlyPreviews ? 'wrap' : 'unset'}\n      >\n        {renderImageSets}\n      </FlexBox>\n\n      <FlexBox padding={'16px 8px'}>\n        <ButtonIcon variant={'filled'} sizeType={'middle'} onClick={handleUploadNewImgModalOpen}>\n          {'Upload'}\n        </ButtonIcon>\n      </FlexBox>\n\n      {FooterComponent && <FooterComponent onAddNewImageSetPress={handleAddNewSet} />}\n    </FlexBox>\n  );\n};\n\nconst ImagesSetBox = styled(FlexBox)`\n  & .scrollBox {\n    &::-webkit-scrollbar {\n      width: 0;\n      height: 0;\n    }\n  }\n`;\nconst SlotOrderChanger = ({\n  onMoveUpPress,\n  onMoveDownPress,\n  currentOrder,\n  canMoveDown,\n  canMoveUp,\n}: {\n  onMoveUpPress?: () => void;\n  onMoveDownPress?: () => void;\n  currentOrder?: number;\n  canMoveDown?: boolean;\n  canMoveUp?: boolean;\n  inverse?: boolean;\n}) => {\n  return (\n    <FlexBox\n      style={{ minWidth: 'fit-content' }}\n      fillHeight\n      gap={6}\n      justifyContent={'space-between'}\n      overflow={'hidden'}\n    >\n      <ButtonIcon variant={'onlyIcon'} icon={'SmallArrowUp'} disabled={!canMoveUp} onClick={onMoveUpPress} />\n      <Text $align={'center'} $weight={600}>\n        {currentOrder || 0}\n      </Text>\n      <ButtonIcon variant={'onlyIcon'} icon={'SmallArrowDown'} disabled={!canMoveDown} onClick={onMoveDownPress} />\n    </FlexBox>\n  );\n};\n\nexport default FormOfferImagesComponent;\n","import { PropertyEntity, PropertyTypeEnum, PropertyValueEntity } from '../../../../types/offers/properties.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport * as React from 'react';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../atoms/ButtonIcon';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { useOffersSelector } from '../../../../redux/selectors.store';\nimport { t } from '../../../../i18e';\nimport TagButtonsFilter from '../../../atoms/TagButtonsFilter';\nimport SvgIcon from '../../../atoms/SvgIcon';\n\ninterface PropertyItemStyleByCmsTypeProps {\n  numColumns?: number;\n}\n\nconst PropertyItemStylesByCmsKey: Record<PropertyTypeEnum | string, PropertyItemStyleByCmsTypeProps> = {\n  [PropertyTypeEnum.size]: {\n    numColumns: 4,\n  },\n  [PropertyTypeEnum.color]: {\n    numColumns: 2,\n  },\n  [PropertyTypeEnum.style]: {\n    numColumns: 2,\n  },\n  [PropertyTypeEnum.care]: {\n    numColumns: 1,\n  },\n};\nexport interface OfferPropertySelectorProps {\n  item: PropertyEntity;\n  selectedValue?: string;\n  selectedIds?: string[];\n  multiple?: boolean;\n  isOpen?: boolean;\n  childrenList?: PropertyEntity['childrenList'];\n  onSelect?: (propId: string, valueId: string, label?: MaybeNull<string>) => void;\n  onChangeIds?: (propId: string, valueIds: string[]) => void;\n}\nexport const OfferPropertySelector = ({\n  item,\n  selectedIds,\n  onSelect,\n  isOpen,\n  multiple,\n  onChangeIds,\n}: OfferPropertySelectorProps) => {\n  const state = useOffersSelector();\n  const [_isOpen, setIsOpen] = useState(isOpen ?? false);\n\n  const childrenList = useMemo(() => {\n    if (item.childrenList?.length) {\n      return item.childrenList;\n    }\n    const _propId = item?._id;\n\n    const _valuesList: PropertyValueEntity[] = [];\n\n    const _valuesIds = state.propertiesKeysMap?.[_propId] ?? [];\n\n    for (const valueId of _valuesIds) {\n      const value = state.propertiesDataMap?.[valueId];\n      if (value) {\n        _valuesList.push(value);\n      }\n    }\n    return _valuesList;\n  }, [item?._id, item.childrenList, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  useEffect(() => {\n    if (childrenList?.length) {\n      setIsOpen(true);\n    }\n  }, [childrenList?.length]);\n\n  const configs = item.cmsConfigs?.type ? PropertyItemStylesByCmsKey?.[item.cmsConfigs?.type] : undefined;\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} fillWidth>\n      <ButtonIcon\n        gap={8}\n        fxDirection={'row'}\n        padding={'6px 0'}\n        justifyContent={'space-between'}\n        alignItems={'center'}\n        onClick={() => {\n          setIsOpen(p => !p);\n        }}\n      >\n        <Text $weight={500} $padding={'0 8px'}>\n          {item.label}\n        </Text>\n\n        <SvgIcon size={'28px'} icon={_isOpen ? 'SmallArrowDown' : 'SmallArrowLeft'} />\n      </ButtonIcon>\n\n      {_isOpen && (\n        <ExpandContainer padding={'8px 0'}>\n          {item.cmsConfigs?.type && (\n            <FlexBox gap={6} padding={'6px'} justifyContent={'center'} alignItems={'center'}>\n              <Text $size={11} $weight={400}>\n                {t('Cms type:')} {`\"${item.cmsConfigs?.type}\"`}\n              </Text>\n            </FlexBox>\n          )}\n\n          <TagButtonsFilter\n            numColumns={configs?.numColumns}\n            name={item._id}\n            multiple={multiple}\n            value={selectedIds}\n            options={childrenList}\n            onSelectValue={info => {\n              onSelect && onSelect(info.name, info.value);\n            }}\n            onChange={values => {\n              onChangeIds && onChangeIds(item._id, values);\n            }}\n          />\n        </ExpandContainer>\n      )}\n    </PropertyBox>\n  );\n};\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n\n  //padding-bottom: 8px;\n\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst ExpandContainer = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\n// const RenderPropertyValue = ({\n//   item,\n//   isSelected,\n//   onSelect,\n// }: {\n//   item: PropertyValueEntity;\n//   isSelected?: boolean;\n//   onSelect: (id: string) => void;\n// }) => {\n//   return (\n//     <ValueTag\n//       variant={isSelected ? 'filledMiddle' : 'outlinedMiddle'}\n//       padding={'6px 8px'}\n//       fontWeight={500}\n//       onClick={() => {\n//         onSelect && onSelect(item._id);\n//       }}\n//     >\n//       {item.label}\n//     </ValueTag>\n//   );\n// };\n\n// const ValueTag = styled(ButtonIcon)`\n//   width: 100%;\n//   max-width: 100%;\n//   min-width: 50px;\n// `;\n\nexport default OfferPropertySelector;\n","import ButtonIcon from './ButtonIcon';\nimport { Text } from './Text';\nimport styled from 'styled-components';\nimport FlexBox from './FlexBox';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport SvgIcon from './SvgIcon';\nimport { MaybeNull } from '../../types/utils.types';\n\nexport interface ImageSmallPreviewProps {\n  src: string;\n  title?: MaybeNull<string>;\n  type?: string;\n  onDeletePress?: () => void;\n  onEditPress?: () => void;\n  onAddNewPress?: () => void;\n  disabled?: boolean;\n\n  maxWidth?: string;\n  maxHeight?: string;\n}\nconst ImagePreviewSmall = ({\n  title,\n  src,\n  onDeletePress,\n  onEditPress,\n  disabled,\n  maxWidth,\n  maxHeight,\n}: ImageSmallPreviewProps) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  return (\n    <ImageSmallPreviewBox\n      className={`ImagePreview_${title}`}\n      fillWidth\n      overflow={'hidden'}\n      alignItems={'center'}\n      justifyContent={'center'}\n      gap={4}\n      border={!isLoaded ? '1px solid lightgrey' : ''}\n      borderRadius={'4px'}\n      style={{ position: 'relative' }}\n      disabled={disabled}\n    >\n      {src ? (\n        <img\n          src={src}\n          alt={title || 'img_title'}\n          style={{ width: '100%' }}\n          onLoad={() => {\n            setIsLoaded(true);\n          }}\n        />\n      ) : (\n        <SvgIcon icon={'gallery'} size={'28px'} fill={'lightgrey'} />\n      )}\n\n      <ImagePreviewBottom fillWidth>\n        {title && (\n          <FlexBox padding={'6px 8px'}>\n            <Text $size={12} $weight={500} color={'#fff'}>\n              {title}\n            </Text>\n          </FlexBox>\n        )}\n\n        <ImagePreviewActions\n          className={'top'}\n          fxDirection={'row'}\n          gap={6}\n          style={{ fill: '#fff' }}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n          fillWidth\n        >\n          <ButtonIcon\n            variant={'onlyIcon'}\n            icon={'edit'}\n            iconSize={'28px'}\n            disabled={!onEditPress}\n            onClick={onEditPress}\n          />\n          <ButtonIcon\n            variant={'onlyIcon'}\n            icon={'delete'}\n            iconSize={'28px'}\n            disabled={!onDeletePress}\n            onClick={onDeletePress}\n          />\n        </ImagePreviewActions>\n      </ImagePreviewBottom>\n    </ImageSmallPreviewBox>\n  );\n};\n\nconst ImageSmallPreviewBox = styled(FlexBox)<{ disabled?: boolean; maxWidth?: string; maxHeight?: string }>`\n  min-width: 115px;\n\n  aspect-ratio: 1/1.35;\n\n  object-position: center;\n  object-fit: contain;\n\n  pointer-events: ${p => (p.disabled ? 'none' : 'all')};\n\n  &:hover {\n    & .top {\n      min-height: 36px;\n    }\n  }\n`;\n\nconst ImagePreviewActions = styled(FlexBox)`\n  height: 0;\n  min-height: 0;\n  padding: 0 6px;\n  overflow: hidden;\n\n  transition: min-height ${p => p.theme.globals.timingFnMain};\n`;\nconst ImagePreviewBottom = styled(FlexBox)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 5;\n\n  background-color: rgba(26, 26, 26, 0.2);\n  backdrop-filter: blur(3px);\n`;\n\nexport default ImagePreviewSmall;\n","import styled from 'styled-components';\nimport React, { memo } from 'react';\nimport { DrawerHeader } from '../Overlays';\n\nexport interface DrawerBaseProps extends Omit<React.FormHTMLAttributes<HTMLDivElement>, 'onSubmit' | 'onReset'> {\n  footer?: boolean;\n  onClosePress?: () => void;\n  onBackPress?: () => void;\n  isLoading?: boolean;\n  extraFooter?: React.ReactNode;\n  extraHeader?: React.ReactNode;\n  fillWidth?: boolean;\n  fillHeight?: boolean;\n  fitContentV?: boolean;\n  fitContentH?: boolean;\n  height?: string;\n  width?: string;\n  canSubmit?: boolean;\n  okButton?: boolean;\n}\n\nconst DrawerBase: React.FC<DrawerBaseProps> = ({\n  title,\n  footer = false,\n  children,\n  extraFooter,\n  extraHeader,\n  isLoading = false,\n  onClosePress,\n  onBackPress,\n  okButton,\n  canSubmit,\n  ...props\n}) => {\n  return (\n    <DrawerContainer className=\"modal_base\" {...props}>\n      <DrawerHeader\n        onBackPress={onBackPress}\n        onClosePress={onClosePress}\n        title={title}\n        canSubmit={canSubmit}\n        okButton={okButton}\n      >\n        {extraHeader}\n      </DrawerHeader>\n\n      <Content className=\"main\">{children}</Content>\n    </DrawerContainer>\n  );\n};\n\nconst DrawerContainer = styled.div<\n  Pick<DrawerBaseProps, 'fillHeight' | 'fillWidth' | 'fitContentH' | 'fitContentV' | 'width' | 'height'>\n>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr max-content;\n\n  position: relative;\n  padding: 0 8px;\n\n  min-height: 200px;\n  max-height: 90vh;\n\n  color: ${p => p.theme.fontColorSidebar};\n  width: ${({ width = '480px', fillWidth, fitContentH }) =>\n    (fillWidth && '100vw') || (fitContentH && 'max-content') || width};\n  height: ${({ height = '', fillHeight, fitContentV }) =>\n    (fillHeight && '90vh') || (fitContentV && 'max-content') || height};\n\n  min-width: 250px;\n  max-width: 100%;\n\n  //overflow: hidden;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  fill: ${({ theme }) => theme.fillColor};\n  color: ${({ theme }) => theme.fontColor};\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  border-radius: 2px;\n  border-bottom: 1px solid ${({ theme }) => theme.modalBorderColor};\n  /* resize: both; */\n\n  @media screen and (max-width: 480px) {\n    width: 98vw;\n  }\n\n  @media screen and (min-width: 480px) {\n    width: ${p => (p.fillWidth ? '98vw' : '450px')};\n  }\n`;\n\nconst Content = styled.main`\n  display: flex;\n  flex-direction: column;\n\n  overflow: auto;\n  position: relative;\n  height: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  ::-webkit-scrollbar {\n    width: 4px;\n    height: 4px;\n  }\n  //border-right: 1px solid ${({ theme }) => theme.modalBorderColor};\n  //border-left: 1px solid ${({ theme }) => theme.modalBorderColor};\n`;\n\nexport default memo(DrawerBase);\n","import { OfferTypeEnum } from '../../types/offers/offers.types';\nimport { PropertiesGroupEntity, PropertyBaseEntity } from '../../types/offers/properties.types';\nimport { useOffersSelector } from '../../redux/selectors.store';\nimport * as React from 'react';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CustomSelectHandler } from './Inputs/CustomSelect';\nimport FlexBox from './FlexBox';\nimport InputLabel from './Inputs/InputLabel';\nimport { t } from '../../i18e';\nimport ButtonsGroup from './ButtonsGroup';\nimport { offerTypeFilterOptions } from '../../data/modalFilterOptions.data';\nimport { Values } from '../../types/utils.types';\nimport TabSelector from './TabSelector';\nimport { Text } from './Text';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport ButtonIcon from './ButtonIcon';\n\nexport type PropertiesFilterData = {\n  type: Values<typeof OfferTypeEnum>;\n  isSelectable?: boolean;\n};\nexport const PropertiesGroupSelector = ({\n  selected,\n  onSelect,\n  filterValue,\n  hasFilter = false,\n  defaultValue,\n}: {\n  selected?: PropertiesGroupEntity;\n  defaultValue?: PropertiesGroupEntity;\n  onSelect?: (opt: PropertiesGroupEntity) => void;\n  filterValue?: Partial<PropertiesFilterData>;\n  hasFilter?: boolean;\n}) => {\n  // const service = useAppServiceProvider().get(AppModuleName.offers);\n\n  const state = useOffersSelector();\n  const [filter, setFilter] = useState<PropertiesFilterData>({\n    type: OfferTypeEnum.GOODS,\n    isSelectable: true,\n    ...filterValue,\n  });\n  const [currentTemplate, setCurrentTemplate] = useState<PropertiesGroupEntity | undefined>(defaultValue);\n  const loaders = useLoaders<'refreshTree' | 'create' | 'update'>();\n\n  const service = useAppServiceProvider().get(ServiceName.offers);\n\n  const rootList = useMemo(() => {\n    if (state.properties?.length) {\n      return state.properties.filter(item => !item.parent);\n    }\n\n    const _ids = state.propertiesByTypeKeysMap[filter.type];\n    const _roots: PropertyBaseEntity[] = [];\n\n    for (const _id of _ids) {\n      const item = state.propertiesDataMap?.[_id];\n      !item?.parent && item && _roots.push(item);\n    }\n\n    return _roots;\n  }, [filter.type, state.properties, state.propertiesByTypeKeysMap, state.propertiesDataMap]);\n\n  const handleSelect: CustomSelectHandler<PropertiesGroupEntity> = option => {\n    if (onSelect && option) {\n      onSelect(option);\n    } else {\n      setCurrentTemplate(option);\n    }\n  };\n\n  useEffect(() => {\n    if (selected) {\n      setCurrentTemplate(selected);\n    }\n  }, [selected]);\n\n  useEffect(() => {\n    if (rootList?.length && !selected) {\n      const found = rootList.find(item => item._id === currentTemplate?._id);\n      if (onSelect && found) {\n        onSelect(found);\n      } else {\n        setCurrentTemplate(found);\n      }\n    }\n  }, [currentTemplate?._id, onSelect, rootList, selected]);\n\n  return (\n    <FlexBox gap={8}>\n      <FlexBox\n        padding={'4px 8px'}\n        fxDirection={'row'}\n        gap={12}\n        alignItems={'center'}\n        fillWidth\n        justifyContent={'space-between'}\n      >\n        <ButtonIcon\n          variant={'text'}\n          sizeType={'extraSmall'}\n          isLoading={loaders.isLoading.refreshTree}\n          onClick={() => {\n            service.getAllProperties({\n              params: { dataView: 'tree', depth: 3 },\n              onLoading: loaders.onLoading('refreshTree'),\n            });\n          }}\n        >\n          {t('Refresh')}\n        </ButtonIcon>\n\n        <ButtonIcon variant={'text'} sizeType={'extraSmall'}>\n          {t('Add')}\n        </ButtonIcon>\n      </FlexBox>\n\n      {hasFilter && (\n        <InputLabel label={t('Select type')}>\n          <ButtonsGroup\n            options={offerTypeFilterOptions}\n            value={filter.type}\n            onSelect={({ value }) => {\n              setFilter(prev => {\n                return { ...prev, type: value };\n              });\n            }}\n          />\n        </InputLabel>\n      )}\n\n      {defaultValue?._id ? (\n        <FlexBox padding={'8px'} gap={8} fxDirection={'row'} alignItems={'center'} justifyContent={'space-between'}>\n          <Text $align={'center'} $size={15} $weight={500}>\n            {t('Current')}\n          </Text>\n          <Text $align={'center'} $size={15} $weight={600}>\n            {selected?.label}\n          </Text>\n        </FlexBox>\n      ) : (\n        <InputLabel label={t('Select properties group')}>\n          <TabSelector\n            options={rootList}\n            onOptSelect={handleSelect}\n            defaultFilterValue={selected?._id || currentTemplate?._id}\n          />\n        </InputLabel>\n      )}\n    </FlexBox>\n  );\n};\n"],"names":["_ref","onChangeIds","onChange","offer","treeData","useDirectorySelector","ApiDirType","directory","_useState","useState","_useState2","_slicedToArray","selectedMap","setSelectedMap","init","useMemo","_offer$categories","categories","_next","forEach","category","_category$parent","parentId","parent","_id","catId","concat","_toConsumableArray","Object","entries","_ref2","_next$key","_ref3","key","val","length","Array","from","Set","useEffect","toggleSelected","useCallback","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ev","wrap","_context","prev","next","map","newMap","checked","_objectSpread","_defineProperty","ids","pathIds","registerId","index","_newMap$registerId","slice","_prev$ev$_id","removeId","keys","filter","_map$key","stop","_x","apply","arguments","renderCategories","isSelected","id","_selectedMap$id","_jsx","RootBox","children","RenderCategory","item","depth","isChecked","FlexBox","minWidth","styled","_templateObject","_taggedTemplateLiteral","p","theme","sideBarBorderColor","CategoriesList","FlexUl","_templateObject2","CategoryListItem","FlexLi","_templateObject3","CategoryItem","_templateObject4","_ref5","_item$childrenList","_item$_id","_item$childrenList2","_item$childrenList3","_ref5$depth","_useState3","childrenList","_useState4","isOpen","setIsOpen","itemId","nextPathIds","_jsxs","padding","gap","fxDirection","alignItems","ButtonIcon","variant","iconSize","disabled","icon","onClick","FlexLabel","flex","CheckBox","size","Text","$size","$weight","label","child","FormContentGrid","AddImageBox","globals","timingFnMui","accentColor","base","light","Image","_current$label","title","_ref$fillHeight","fillHeight","onSubmit","onClose","defaultState","props","type","_objectWithoutProperties","_excluded","formAddImageSetTabs","current","setCurrent","formData","setFormData","inputRef","useRef","ModalForm","width","fillWidth","overflow","value","src","SvgIcon","name","className","InputLabel","replace","toUpperCase","required","InputText","ref","e","_e$target","target","placeholder","autoFocus","ButtonsGroup","options","currentOption","onSelect","info","option","acceptedFormats","acceptedFormatsErrorMessage","join","validation","YUP","shape","file","test","v","includes","t","FlexForm","ImageBox","ErrorBox","_templateObject5","_permissionsState$per","_form$formState$error","_form$formState$error2","onSuccess","offerId","loaders","useLoaders","processing","content","permissionsState","usePermissionsSelector","form","useForm","defaultValues","mimeType","fileName","permission","company","resolver","yupResolver","reValidateMode","mode","watch","preview","setPreview","objectUrl","URL","createObjectURL","revokeObjectURL","console","log","DrawerBase","onClosePress","handleSubmit","fData","_fData$file","apiCall","FilesApi","data","logError","logRes","onLoading","onError","error","errors","accept","files","setValue","shouldDirty","shouldTouch","shouldValidate","trigger","then","clearErrors","catch","resetField","keepError","formState","message","sizeType","unregister","margin","ImagesSetBox","SlotOrderChanger","onMoveUpPress","onMoveDownPress","currentOrder","canMoveDown","canMoveUp","style","justifyContent","$align","onChangeState","renderHeader","initialData","_ref$canEditOrder","canEditOrder","FooterComponent","contentContainerStyle","hideLabel","_ref$onlyPreviews","onlyPreviews","modalS","useModalService","handleAddImageSet","updatedData","order","handleChangeOrder","currentSetOrder","increment","newOrder","set","handleAddImageToSet","setIndex","uri","handleRemoveImageFromSet","setId","ImageSetSrcType","window","confirm","img_preview","handleAddNewSet","create","AddImageSetModal","renderImageSets","_dataForRender","dataForRender","sort","a","b","_a$order","_b$order","slot","slotIndex","_dataForRender2","_slot$order","_slot$order2","renderPreviews","el","imgIndex","_el$label","ImagePreviewSmall","onEditPress","open","ModalChildren","modalChildrenProps","onDeletePress","maxWidth","isNumber","height","flexWrap","UploadOfferImageModal","url","onAddNewImageSetPress","PropertyItemStylesByCmsKey","_PropertyItemStylesBy","PropertyTypeEnum","numColumns","PropertyBox","ExpandContainer","_item$cmsConfigs","_item$cmsConfigs2","_item$cmsConfigs3","_item$cmsConfigs4","selectedIds","multiple","state","useOffersSelector","_isOpen","_state$propertiesKeys","_state$propertiesKeys2","_step","_propId","_valuesList","_valuesIds","propertiesKeysMap","_iterator","_createForOfIteratorHelper","s","n","done","_state$propertiesData","valueId","propertiesDataMap","push","err","f","configs","cmsConfigs","undefined","$padding","TagButtonsFilter","onSelectValue","values","ImageSmallPreviewBox","ImagePreviewActions","timingFnMain","ImagePreviewBottom","maxHeight","isLoaded","setIsLoaded","border","borderRadius","position","alt","onLoad","fill","color","footer","extraHeader","extraFooter","isLoading","onBackPress","okButton","canSubmit","DrawerContainer","DrawerHeader","Content","fontColorSidebar","_ref2$width","fitContentH","_ref3$height","fitContentV","shadowMain","fillColor","_ref6","fontColor","_ref7","modalBackgroundColor","_ref8","modalBorderColor","_ref9","_ref10","_ref11","memo","PropertiesGroupSelector","selected","filterValue","_ref$hasFilter","hasFilter","defaultValue","OfferTypeEnum","isSelectable","setFilter","currentTemplate","setCurrentTemplate","service","useAppServiceProvider","get","ServiceName","rootList","_state$properties","properties","_ids","propertiesByTypeKeysMap","_roots","found","find","refreshTree","getAllProperties","params","dataView","offerTypeFilterOptions","TabSelector","onOptSelect","defaultFilterValue"],"sourceRoot":""}