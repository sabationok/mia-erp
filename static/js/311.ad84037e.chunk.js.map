{"version":3,"file":"static/js/311.ad84037e.chunk.js","mappings":"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","sources":["components/AppPages/pagesStyles.tsx","components/AppPages/warehousing/PageWarehouseOverview.tsx","data/warehauses.data.ts"],"sourcesContent":["import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import TableList, { ITableListContext } from 'components/TableList/TableList';\nimport { takeFullGridArea } from '../pagesStyles';\nimport styled from 'styled-components';\nimport { useEffect, useMemo, useState } from 'react';\nimport { ITableListProps, TableActionsCreator } from '../../TableList/tableTypes.types';\nimport AppGridPage from '../AppGridPage';\nimport { useWarehousesSelector } from '../../../redux/selectors.store';\nimport { ApiQuerySortParams } from '../../../api';\nimport { warehouseOverviewTableColumns } from '../../../data/warehauses.data';\nimport { useAppParams } from '../../../hooks';\nimport { WarehouseItemEntity } from '../../../types/warehousing/warehouses.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useModalProvider } from '../../../Providers/ModalProvider/ModalProvider';\nimport { Modals } from '../../Modals/Modals';\nimport { BaseAppPageProps } from '../index';\nimport { enumToTabs } from '../../../utils';\nimport TabSelector from '../../atoms/TabSelector';\n\ninterface Props extends BaseAppPageProps {}\n\nenum WarehouseOverviewTabsEnum {\n  Inventories = 'Inventories',\n  Documents = 'Documents',\n  Warehouse = 'Warehouse',\n}\nconst tabsOptions = enumToTabs(WarehouseOverviewTabsEnum);\nconst PageWarehouseOverview: React.FC<any> = (props: Props) => {\n  const warehouseId = useAppParams().warehouseId;\n  const { getById } = useAppServiceProvider()[ServiceName.warehouses];\n  const state = useWarehousesSelector();\n  const actionsCreator = useWarehouseOverviewActionsCreator();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ApiQuerySortParams>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<WarehouseItemEntity> => ({\n      tableData: state.current?.inventories,\n      hasFilter: false,\n      hasSearch: true,\n      showFooter: true,\n      checkBoxes: !!state.current?.inventories?.length,\n      actionsCreator,\n      onTableSortChange: (param, sortOrder) => {\n        setSortParams({ sortPath: param.dataPath, sortOrder });\n      },\n    }),\n    [actionsCreator, state]\n  );\n\n  useEffect(() => {\n    console.log('sortParams', sortParams);\n    if (warehouseId) {\n      getById({ data: { _id: warehouseId }, onLoading: setIsLoading });\n    }\n    // eslint-disable-next-line\n  }, [warehouseId]);\n\n  return (\n    <AppGridPage path={props.path}>\n      <Page>\n        <TabSelector options={tabsOptions} />\n\n        <TableList {...tableConfig} isLoading={isLoading} tableTitles={warehouseOverviewTableColumns} />\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\n\ntype WarehouseTableActionsCreator = TableActionsCreator<WarehouseItemEntity>;\n\nconst useWarehouseOverviewActionsCreator = (): WarehouseTableActionsCreator => {\n  // const service = useAppServiceProvider().warehouses;\n  const modalS = useModalProvider();\n\n  return (ctx: ITableListContext<WarehouseItemEntity>) => {\n    const current = ctx.selectedRow;\n\n    return [\n      { name: 'deleteInventory', icon: 'delete', onClick: () => {} },\n      { name: 'editInventory', icon: 'edit', onClick: () => {} },\n      {\n        name: 'addInventory',\n        icon: 'plus',\n        type: 'onlyIconFilled',\n        onClick: () => {\n          console.log(current);\n          modalS.open({\n            Modal: Modals.SelectProductModal,\n            props: {\n              onSelect: p => {\n                modalS.open({\n                  Modal: Modals.FormCreateWarehouseDocument,\n                  props: {\n                    product: p,\n                    title: `Create warehouse document. Offer ${p?.label}`,\n                  },\n                });\n              },\n            },\n          });\n        },\n      },\n    ];\n  };\n};\nexport default PageWarehouseOverview;\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { WarehouseEntity, WarehouseItemEntity } from '../types/warehousing/warehouses.types';\nimport { t } from '../lang';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<WarehouseEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email'), path: 'email' },\n    bottom: { name: t('phone'), path: 'phone' },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["takeFullGridArea","css","_templateObject","_taggedTemplateLiteral","takeFullPlace","_templateObject2","_templateObject3","WarehouseOverviewTabsEnum","tabsOptions","enumToTabs","Page","styled","useWarehouseOverviewActionsCreator","modalS","useModalProvider","ctx","current","selectedRow","name","icon","onClick","type","console","log","open","Modal","Modals","props","onSelect","p","product","title","concat","label","warehouseId","useAppParams","getById","useAppServiceProvider","ServiceName","state","useWarehousesSelector","actionsCreator","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","sortParams","setSortParams","tableConfig","useMemo","_state$current","_state$current2","_state$current2$inven","tableData","inventories","hasFilter","hasSearch","showFooter","checkBoxes","length","onTableSortChange","param","sortOrder","sortPath","dataPath","useEffect","data","_id","onLoading","_jsx","AppGridPage","path","children","_jsxs","TabSelector","options","TableList","_objectSpread","tableTitles","warehouseOverviewTableColumns","warehousesTableColumns","top","t","getData","rd","bottom","code","width","action","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","user","_rd$manager2","_rd$manager2$user","email","align","_rd$variation","variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","offer","images","img_preview","_rd$variation2","sku","_rd$variation3","barCode","stock","reserved","awaiting","lost","_rd$warehouse","warehouse","_rd$warehouse2","batchPricesColumns","_d$price","numberWithSpaces","Number","price","in","_d$price2","out","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}